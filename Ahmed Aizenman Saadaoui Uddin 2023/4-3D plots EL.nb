(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    253230,       4836]
NotebookOptionsPosition[    251297,       4793]
NotebookOutlinePosition[    251776,       4811]
CellTagsIndexPosition[    251733,       4808]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"y", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"-", "0.1610"}], ")"}], "x"}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"-", "2.0514"}], ")"}], "z"}], "+", 
   RowBox[{"0.0449", 
    RowBox[{"(", 
     RowBox[{"x", "*", "z"}], ")"}]}]}]}]], "Input",
 CellChangeTimes->{{3.900148690253622*^9, 3.9001486902586656`*^9}, {
   3.90015046698492*^9, 3.900150480904479*^9}, {3.9001506072934947`*^9, 
   3.900150608318774*^9}, 3.9001510405207634`*^9, {3.9001516859520855`*^9, 
   3.900151699860014*^9}, {3.9001523176521854`*^9, 3.9001523177273083`*^9}, {
   3.90015245675377*^9, 3.9001524629649134`*^9}, 3.9001772911549225`*^9, 
   3.900177435303231*^9, 3.9001774658263206`*^9, {3.900177779224944*^9, 
   3.900177779428069*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"e4ffab0d-3633-4d85-be91-aef44cbaa0c8"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "0.161`"}], " ", "x"}], "-", 
  RowBox[{"2.0514`", " ", "z"}], "+", 
  RowBox[{"0.0449`", " ", "x", " ", "z"}]}]], "Output",
 CellChangeTimes->{3.9003172717920523`*^9, 3.961040731745573*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"40cda379-8ac9-e94d-9817-d8158ea53b28"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"m", "=", 
  RowBox[{"Plot3D", "[", 
   RowBox[{"y", ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "44", ",", "48"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"z", ",", "2", ",", 
      RowBox[{"-", "5"}]}], "}"}], ",", 
    RowBox[{"ColorFunction", "->", "\"\<Rainbow\>\""}], ",", " ", 
    RowBox[{"AxesLabel", "->", 
     RowBox[{"{", 
      RowBox[{"\"\<Reserves\>\"", ",", "\"\<FX Inter.\>\"", 
       ",", "\"\<dFX\>\""}], "}"}]}], ",", 
    RowBox[{"FormatType", "\[Rule]", "StandardForm"}], ",", 
    RowBox[{"PlotLegends", "->", "Automatic"}], ",", 
    RowBox[{"Mesh", "\[Rule]", "3"}], ",", 
    RowBox[{"ImageSize", "->", "Large"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.900148700324398*^9, 3.9001487616018653`*^9}, {
   3.9001487950433674`*^9, 3.900148815228194*^9}, {3.9001488778047857`*^9, 
   3.900148884528303*^9}, {3.900148993740638*^9, 3.900149012617082*^9}, {
   3.9001490695701675`*^9, 3.900149186745632*^9}, {3.9001492442464614`*^9, 
   3.900149251301995*^9}, {3.9001495074601183`*^9, 3.900149534654479*^9}, {
   3.9001495960755033`*^9, 3.900149611316947*^9}, {3.9001498113506994`*^9, 
   3.9001498269568872`*^9}, {3.9001498833676605`*^9, 
   3.9001498852480087`*^9}, {3.9001499333278093`*^9, 3.900149939848808*^9}, {
   3.900151158912558*^9, 3.900151254374671*^9}, 3.9001517059348955`*^9, {
   3.9001517705846567`*^9, 3.900151826497485*^9}, {3.900151863810401*^9, 
   3.9001518675251265`*^9}, {3.9001522547853785`*^9, 
   3.9001522744316597`*^9}, {3.9001528078774824`*^9, 
   3.9001528085340347`*^9}, {3.9001528515501246`*^9, 3.900152885059867*^9}, {
   3.900152950840863*^9, 3.9001529877014513`*^9}, {3.9001530268936424`*^9, 
   3.900153047621931*^9}, {3.900153244606186*^9, 3.9001532447791643`*^9}, {
   3.9001533450602465`*^9, 3.900153345285576*^9}, {3.900153377064379*^9, 
   3.9001533840057025`*^9}, {3.900153502535412*^9, 3.900153585083228*^9}, {
   3.9001536712531247`*^9, 3.900153728238373*^9}, {3.900153796431137*^9, 
   3.9001537966010065`*^9}, {3.9001539406926746`*^9, 
   3.9001539408662577`*^9}, {3.9001541140469437`*^9, 3.9001541396741157`*^9}, 
   3.900154227845277*^9, 3.9001542941549997`*^9, {3.900159260709405*^9, 
   3.9001592841397324`*^9}, {3.9001593340731716`*^9, 
   3.9001593370607815`*^9}, {3.9001595831622453`*^9, 3.900159663360807*^9}, {
   3.900159700130028*^9, 3.900159761039461*^9}, {3.9001598218803525`*^9, 
   3.9001600025635667`*^9}, {3.9001600838701897`*^9, 
   3.9001602217463503`*^9}, {3.900160708184765*^9, 3.9001607084684224`*^9}, {
   3.900176500542332*^9, 3.900176502901758*^9}, 3.900176610070739*^9, {
   3.900176687575621*^9, 3.900176725337181*^9}, {3.9001767593632975`*^9, 
   3.900176807910777*^9}, {3.9001768397237926`*^9, 3.900176866579667*^9}, {
   3.9001769326785226`*^9, 3.9001769454513288`*^9}, {3.900176998675748*^9, 
   3.9001770554058647`*^9}, 3.900177184504284*^9, {3.900177220025738*^9, 
   3.9001772475166235`*^9}, {3.900177334696192*^9, 3.9001773589372616`*^9}, {
   3.9001773903228965`*^9, 3.900177417756656*^9}, {3.9001774965690475`*^9, 
   3.900177505070038*^9}, {3.9001775391004877`*^9, 3.900177565373348*^9}, 
   3.9001777600311937`*^9, {3.9001779093030834`*^9, 3.900177924757218*^9}, 
   3.9001779626113744`*^9, {3.900178058413156*^9, 3.9001780774417467`*^9}, {
   3.9001783522673264`*^9, 3.9001783761941843`*^9}, 3.900178420422248*^9, {
   3.9001784858551173`*^9, 3.9001784959600954`*^9}, {3.9002126641666393`*^9, 
   3.9002126665235534`*^9}, {3.90021277506796*^9, 3.900212808571968*^9}, {
   3.9002132450576086`*^9, 3.900213260279612*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"fca6810f-d82e-428c-a14d-68ed3cd356e1"],

Cell[BoxData[
 TemplateBox[{
   Graphics3DBox[{
     GraphicsComplex3DBox[CompressedData["
1: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
Kf2+/Q/jeYSi
      "], {{{
         EdgeForm[], 
         Directive[
          Specularity[
           GrayLevel[1], 3], 
          RGBColor[0.880722, 0.611041, 0.142051], Lighting -> "Neutral"], 
         GraphicsGroup3DBox[
          TagBox[{
            Polygon3DBox[CompressedData["
1:eJxNmHn811MWxu+xR4tKlFS/bGWplOxpj1DWCiUS8atpqlEzLZYmJEuhlBRR
2ogkZuxbtsgWMxjGbhjbyL5vz7vzfF/mj+d1fvfez7333HPPPc/z/TUfPPLo
ERuUUlZGKRvKviPQrivsKGwlNBB21Xh92R+FVkIToanQVmgubC/sIVS53Sqy
r9jWKzmftTYWNhFaamxT2Z+Erd23qb/FB/xpoW82kv3B8+mj3VDYTKgh7Cns
YH/bCM3sx4nC4cIRwu5aZ1vZX4VBwpHCUUIX9Z/HOWVnyU4WLhDae72dhF2E
RiXntxC28f67C9s5Fi3d18hzGvhMu0Xan/lbaOw5jez75l4Xu4VjV9cx6C0c
KHQU+guHCocJJwi9PN5POEg4WBjoPs7cV+jhseOEnsIhwvG2rLU/92q/9opc
YzPZA9zH+faOjF8N2Q7u4/77CN29R3uNdePuIvfG304+Z02hFjGMPN8vwjrh
PeE/vqctfebWkbGLyJgyrzY+CDs79vvYtvS9sk9nciDSbhK+V6GrcLQt/u3r
edznTOF833ebyL4NZK/0/U8RrhIuFC4SxginCkOE0cIpbh8Q2Vdbdqzs6UK1
8BfhNLfHuW+ocIYw2POH+J76+btjfVf7RvZtIbtP5Bk2j9yvj+cw/xi3qz2P
u+VtkXu82wmas1L2OtnjI+M4WbZ/ZBwvkD1O2ItYyB4T+Yb/Sgwj39JE2RVC
R2GJMEj4g/qn4pfQWn+fIztaWKa/58ieLAzT35fIDozMs4tkT3RuXSx7grAf
8Y2MC76T46w9oGSO789a5IHsNNmz2Ys7V/ss2Xqyl7pvonANfpX8di774EPJ
NY5yLtA+s+T8zpHz6svO8T1fbEzwdzOEc0vWiMuJjTBJmG7LWI/I/RrKzvP+
+LW4ZE0hp4b7TLzR/SJrU03ZP7qP9qiStQl/RwonuY1f4+1T90iftpFdYD9o
LyqZ0+y3ULjC7W6O0day18le5nPMt2V+18i4NOD+I2v6hrLtIt/MxtQG77et
7KHCrfq7iewjsrcLfxNWlcy324R7SubDTcK9tjcLPTXnRtnGsg/Krii51iGR
49tF1j44g1p4v7BcuEU4QmNrGJN9wH3M/5fwhPBkyTrCvCrhLuGGkvvdKSx1
+0XhMeFx4w6Pv+T2auHZknvgY2/7WhX57RKv9b7X+aewVnjIMXjYMSAuz/9f
H9/+3fu94D7id3jkns0jayG+w2HUR+ogNbCW/6am/k/4wGu8W5KzmfeW/WDP
14SnhWeEfwtPuf26+zgfHFvPMYOL4TV4Co6t7zE4Fl5jDC6mrqABKrwFj8Hb
cBx158jItXeQfVP2OftUw9+yFpxIPafOcx44ZTfPp/7Du+gNOL14T/poN/a3
8FZNx4M++J0+ajhcQx9c/4rzYo33p863rJynpB8N3dfCsbnfd0+87nN7tXOE
nDos0jaN9IWaRo2Da6nbfX2mDh7b1ePUux4ep263cQ3kfcG/1H9qPvwAT/yp
ZK0YIVsnksOp83xHbaBGMEad5NstI+vFKI9xJt5vhTOxcADarF3JNw53wyPw
S4UvqZXd7SNjaBB0BZoDvoV34fku/hYtBf9i0QkdPd7bd4Y+a+c7bO92a/PO
Rs4F/KLdNnJvtAQcN9qx6GufzzUPjvEYHAvX/tn+MlbhRiyxhE/5rrZjfLrn
wTPwzTDHtdpj3M8Qr8U7hAdbO4/uLlnbqkpyJWNr3Eed44228v33iuxrZh7H
l1rWJ9T4QY7dIN8ne4/1eahhbb0Hfo3zWIdIHoT74A34o8Itw30euHSo53EP
cAvfouXYB96paEHOjRbs73YvrzXA9zfQbXQOMa4r2y/yDs+TPTCSE+HQW4WD
hKVoBH9/RSQnw81Xc0bn6uWy1ZF3O112eOS5Z8qOEmbr7yvhx8hzz5IdE14n
UqPBq/DdQJ9nvZaIzIsZrCdcy96Rmof3if4ZEKl10T/wIbzId5O9HryJXuKt
nu/zdnXuwe3zfJ6x5tR5suMiOfXaSC3EWedy1khtcZXsyEhNOTuSu6gx1JZb
HMfFwg3m4EnccySvXk8szY+cfVmk5kBr3Rz5ZhYKN0XyNHrvxkj+niKcFclF
C2TPjOSm+ZG8j5/olpMif1ugzdBp5ASaDf273ueS2g8Ngq5Dk8zx2PhIDufs
Y302Yo6OmuvviM8Kx+rYSD1O/hBrtEtFs2CvF/pE6nm0aCfnEPrkHr833iK6
D23DnXAm+HRVyfdB31Tf52Lv0dn3jRaaVFL7VDQdljFqO1oCLr7b+9DmLcOh
aI+V3uehkloIW+UYP2I/4Hn4/tGSfP+423DIareX+/7vM+Cbp9z3jNtoDzgU
Ph0SWdcvi9SmaLaKVsVyJ+hD4odO43wLyu9ab75zfYl9wkc0PzV9ovNkkfMN
/U8dR9tP8JrznT8LnUvd/L4aReqhO71uRfNxV9QDzomuW+Y+4jre/pJf/Lbg
txi/wdHTM3w3/DYnJ9C66La7vEdP301Tz5vp3EFDEsdmrhX4wRtcHlk3Fwmn
RWp+YoiGequkXuJ98a6X+p7RTK+W1JzYnSJzAT2B3lzruW/6vl/wOk94/GXh
M+G/JXXityV/99bx3aLD0Gi8BTiR93tGpFalVnzi+cz9zn//Q/jY66ANn/P+
bzhXXrPfaDD6dpYdFsmV/HYj/9C+6FU0Jz7uGLkm69X2OT7wWZq4v6nte/77
MftFbn8ufOg57/u89H/iNnuR6y95b7TqRyW15zfCp2W9xFtvPyq/a1ksuvQL
j73rPT503L90HD722Kee87V9QiN/5bjhC/eOLlrsOoSef8DfMuftkrWaPJvt
uPGbDx753t+97X2+sM/r7Ecd7/e5fRwR+f+DWa75vA24bHAkR0+L9Os7x2ud
84P4wndwGzx4aqS+uzRy328cI7RQl5Icwe9odOEUr/mV8wQ+hc/g31Mif+9O
c61a69zB3+8d08GuKVP9PbqC91LtWglfEy+0Pfm7yjnCWkP9bqe7Rp1jn38D
O6pPVQ==
             "]], 
            Polygon3DBox[CompressedData["
1:eJxNluuXl1MUx/fJdKFcUso0BpVC6KamMrrRbeSSBuUWwkRqpmlq0k1NqVCK
XCpNNek6lHJ5wcpaecdiLd6xWIs/BOHzXfv7wovPer7P73ee8+xz9nfv8wxc
2DS3sUtEHIIKeKVETOI6Eeair4Lt6HUwGR0wiEsfGIbeAJMjn3kQvQdOok9A
E3ovdEb+1oxug6nobhoHF9D9oDvcxP1FMCryHbeh/+U6AHrCzdz/5Xcr1hu5
3whTImOoR79f8t3HYRn6QziKPgbr0V1hvOaCEeiH/L6RjucKWMb9M3AH+nGP
H611QE94hPuZMBbdCxagH4Aa9KUln50L49CH4UhkDOvQHYop8re16Mvg+cg5
x6MvLjmX1nQ7+nJYGvmOCejesCLymVr0LuVAedNv6N2wGb0JXkS/XVK3wQvo
92AbeissRb8DW9CvwkvoAkOck1vQ75YcqzFL0DtgLXoNPC1vlNSrtWfoChgT
OcdwdJeSe60c3op+s6SXNMdC9CUl9+puGIP+AD5GfwQtWkvJ/+7SHnm/GtAr
vX49X6+5vN89YBZ6nvOj+BZrbY5X8Usv8ft3lty79fCc/dUXBtvf18Bp9NdQ
5/j1rHLyLLqqZKxfwSz031x7QH/7uRo+RX8D9zi/c9BP2S9HnV/l+bTz2RTp
wQb7S2Mbnf8Lnnuo8yO/ae3N9ms319cc+6c7TIvcI+3vtSVj/Q5m28/aqwb7
75j9rzr4BI7bb/LdGe+XYmn6n99aIscsRr9VMpbl9pv8J91iPw6CH9C/qWbQ
15XcW/12L/r6knv1E9yH/pNrV+dE9T4Ufkf/qDWiB8K36C+9Hs13Dn3K+dJ8
59Fnvf9av8Z2Ol//cO0FVZH95aT3UPWn3iBPyBt3Oj9D4Ffuv3f8qhnVziTv
z+CSsZ13/Fqvxp7z+uY7H6O4noJKOMD9TtVAyR4jD6u/qPdc6ffviOy/fWAj
ehdMQfdXDUf2lGno1XAYPVN1BK327wyuZ2GA/9/t8X0dv+aYiu5Xcu6Djme5
ahI9XT4veR4olv2qSfQixzPRflE+5K1f4H7vh3L5h/O1qWQty6MPl+zv2vth
kf1B/UfeHhvZP/aXzKV6woqS59Nw9IjI86Zd741co9aq82BkZE9X/nQ+aax+
q/f7R6s2IvvJazBBtQNPom+AnyM9pfgPlazfau/nG1ArP6iG0QdLeusMvIze
V7IfVHm/DpT8TzGuKtn/P4uccw16K4yLPGOU7y1QE/nbY/5fXpjh+20l+1sP
e0Xj9d90eFS5LKnlsfmOd7a8DwvQr5dca63vtf66yDmf8Ho6Ij0iLx0p2c8r
7Fc9r7nqvF/qz9pLjZnn9epbosP7oXiUyxrHp+8H9VblQOe7zucv0J9Hno/y
n2phg/2t/LdH1sjKkueDvNduP+j7Yl+kR+XVE66nSvtd3wN7uN8b+T0ij6q3
qUfJuzoPVylWaCx5XsmL8oS+D3R+KzblTOe1zkudPa2R56HOR2nNofNUPaC3
x6g3qGeot6tnqpfo+0ixKOZm+1e1dsj+kMeq7Snt/9Wuv+2uN9W7anez61Vr
rPQcrc5Rhfdc+Vc/bous0UX2pLzZ6f36D6fdA20=
             "]], 
            
            Polygon3DBox[{{419, 305, 263, 67, 343}, {415, 327, 282, 162, 
             378}, {420, 316, 274, 124, 355}, {423, 326, 284, 172, 373}, {385,
              304, 259, 50, 341}, {422, 318, 276, 131, 362}, {421, 317, 275, 
             127, 358}, {391, 306, 261, 57, 348}, {409, 325, 280, 155, 
             371}}]}, 
           Annotation[#, 
            "Charting`Private`Tag$22001#1"]& ]]}, {}, {}, {}, {}}, {{
         GrayLevel[0], 
         Line3DBox[CompressedData["
1:eJwt0DlOgkEYgOFfVFwQ9AQSE7TTE+AJoCKhwYJAhwVaSmGtJ5AT6An0BHoC
3BDFJYYYERsXFGKIDwnFk3fmm2lmlopbmfJYEARZugzXHzyzQJw1Mg7WNc0G
mxTMKrpPlW37Iz3hjBd+OeeLDhdcckXC/Wutc8OyfUNvuaPJitm9PvDIKz2e
+OadGqccs+v+oR6wx/BxO1oiR4q8WVJXWaTFD/N88kaMKHMMiDDLDNP8MUWY
SfpMME6I9ug//wFjMDCC
          "], VertexColors -> None]}, {
         GrayLevel[0.2], 
         Line3DBox[{338, 382, 337, 383, 339, 384, 340, 424, 385, 341, 386, 
          342, 387, 343, 419, 428, 344, 388, 345, 389, 346, 390, 347, 425, 
          391, 348, 392, 349, 393, 350, 394, 351}, VertexColors -> None], 
         Line3DBox[{353, 395, 352, 396, 354, 397, 355, 420, 429, 356, 398, 
          357, 399, 358, 421, 430, 359, 400, 360, 401, 361, 402, 362, 422, 
          431, 363, 403, 364, 404, 365, 405, 366}, VertexColors -> None], 
         Line3DBox[{368, 406, 367, 407, 369, 408, 370, 426, 409, 371, 410, 
          372, 411, 373, 423, 432, 374, 412, 375, 413, 376, 414, 377, 427, 
          415, 378, 416, 379, 417, 380, 418, 381}, VertexColors -> None]}, {
         GrayLevel[0.2], 
         Line3DBox[{250, 295, 251, 298, 256, 301, 259, 304, 424, 262, 307, 
          265, 310, 268, 313, 271, 429, 316, 274, 319, 277, 322, 280, 325, 
          426, 283, 328, 286, 331, 289, 334, 292}, VertexColors -> None], 
         Line3DBox[{252, 296, 253, 299, 257, 302, 260, 428, 305, 263, 308, 
          266, 311, 269, 314, 272, 430, 317, 275, 320, 278, 323, 281, 432, 
          326, 284, 329, 287, 332, 290, 335, 293}, VertexColors -> None], 
         Line3DBox[{254, 297, 255, 300, 258, 303, 261, 306, 425, 264, 309, 
          267, 312, 270, 315, 273, 431, 318, 276, 321, 279, 324, 282, 327, 
          427, 285, 330, 288, 333, 291, 336, 294}, VertexColors -> 
          None]}, {}, {}}}, VertexColors -> CompressedData["
1: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
3xkCf58w/o+//7f67CmB3i4S6K29QG//BxxK1ZQ=
       "], VertexNormals -> CompressedData["
1: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

       "]], {}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, 
     Ticks -> {Automatic, Automatic, Automatic}, FaceGrids -> None, 
     DisplayFunction -> Identity, Axes -> True, AxesLabel -> {
       FormBox[
        TagBox["\"Reserves\"", HoldForm], StandardForm], 
       FormBox[
        TagBox["\"FX Inter.\"", HoldForm], StandardForm], 
       FormBox[
        TagBox["\"dFX\"", HoldForm], StandardForm]}, 
     AxesOrigin -> {Automatic, Automatic, Automatic}, 
     BoxRatios -> {1, 1, 0.4}, DisplayFunction :> Identity, FaceGridsStyle -> 
     Automatic, FormatType :> StandardForm, ImageSize -> Large, Lighting -> 
     "Neutral", Method -> {"DefaultBoundaryStyle" -> Directive[
         GrayLevel[0.3]], 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "RotationControl" -> "Globe"}, 
     PlotRange -> {{44, 48}, {-5, 
       2}, {-8.246999837957148, -6.705000148042851}}, PlotRangePadding -> {
       Scaled[0.02], 
       Scaled[0.02], 
       Scaled[0.02]}, Ticks -> {Automatic, Automatic, Automatic}}], 
   TemplateBox[{
     StyleBox[
      StyleBox[
       PaneBox[
        GraphicsBox[{
          RasterBox[CompressedData["
1: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
/wEdeLt3
           "], {{
             Rational[-15, 2], (-288)/GoldenRatio}, {
             Rational[15, 2], 288/GoldenRatio}}], {Antialiasing -> False, 
           AbsoluteThickness[0.1], 
           Directive[
            Opacity[0.3], 
            GrayLevel[0]], 
           LineBox[
            NCache[{{
               Rational[15, 2], (-288)/GoldenRatio}, {
               Rational[-15, 2], (-288)/GoldenRatio}, {
               Rational[-15, 2], 288/GoldenRatio}, {
               Rational[15, 2], 288/GoldenRatio}, {
               Rational[15, 2], (-288)/GoldenRatio}}, {{
             7.5, -177.9937887599697}, {-7.5, -177.9937887599697}, {-7.5, 
             177.9937887599697}, {7.5, 177.9937887599697}, {
             7.5, -177.9937887599697}}]]}, {
           CapForm[None], {}}, 
          StyleBox[{Antialiasing -> False, 
            StyleBox[
             StyleBox[{{
                StyleBox[
                 LineBox[{{{7.499999999999998, -177.9937887599698}, 
                    
                    Offset[{4., 0}, {
                    7.499999999999998, -177.9937887599698}]}, {{
                    7.499999999999998, -120.20359760413541`}, 
                    
                    Offset[{4., 0}, {
                    7.499999999999998, -120.20359760413541`}]}, {{
                    7.499999999999998, -62.413406448301025`}, 
                    
                    Offset[{4., 0}, {
                    7.499999999999998, -62.413406448301025`}]}, {{
                    7.499999999999998, -4.623215292466645}, 
                    
                    Offset[{4., 0}, {
                    7.499999999999998, -4.623215292466645}]}, {{
                    7.499999999999998, 53.16697586336744}, 
                    
                    Offset[{4., 0}, {7.499999999999998, 
                    53.16697586336744}]}, {{7.499999999999998, 
                    110.95716701920183`}, 
                    
                    Offset[{4., 0}, {7.499999999999998, 
                    110.95716701920183`}]}, {{7.499999999999998, 
                    168.7473581750362}, 
                    
                    Offset[{4., 0}, {7.499999999999998, 
                    168.7473581750362}]}}], {
                  Directive[
                   AbsoluteThickness[0.5], 
                   GrayLevel[0.4]]}, StripOnInput -> False], 
                StyleBox[
                 LineBox[{{{7.499999999999998, -166.43575052880274`}, 
                    
                    Offset[{2.5, 0.}, {
                    7.499999999999998, -166.43575052880274`}]}, {{
                    7.499999999999998, -154.87771229763626`}, 
                    
                    Offset[{2.5, 0.}, {
                    7.499999999999998, -154.87771229763626`}]}, {{
                    7.499999999999998, -143.31967406646893`}, 
                    
                    Offset[{2.5, 0.}, {
                    7.499999999999998, -143.31967406646893`}]}, {{
                    7.499999999999998, -131.76163583530217`}, 
                    
                    Offset[{2.5, 0.}, {
                    7.499999999999998, -131.76163583530217`}]}, {{
                    7.499999999999998, -108.64555937296836`}, 
                    
                    Offset[{2.5, 0.}, {
                    7.499999999999998, -108.64555937296836`}]}, {{
                    7.499999999999998, -97.0875211418019}, 
                    
                    Offset[{2.5, 0.}, {
                    7.499999999999998, -97.0875211418019}]}, {{
                    7.499999999999998, -85.52948291063454}, 
                    
                    Offset[{2.5, 0.}, {
                    7.499999999999998, -85.52948291063454}]}, {{
                    7.499999999999998, -73.97144467946808}, 
                    
                    Offset[{2.5, 0.}, {
                    7.499999999999998, -73.97144467946808}]}, {{
                    7.499999999999998, -50.85536821713397}, 
                    
                    Offset[{2.5, 0.}, {
                    7.499999999999998, -50.85536821713397}]}, {{
                    7.499999999999998, -39.29732998596751}, 
                    
                    Offset[{2.5, 0.}, {
                    7.499999999999998, -39.29732998596751}]}, {{
                    7.499999999999998, -27.73929175480016}, 
                    
                    Offset[{2.5, 0.}, {
                    7.499999999999998, -27.73929175480016}]}, {{
                    7.499999999999998, -16.1812535236337}, 
                    
                    Offset[{2.5, 0.}, {
                    7.499999999999998, -16.1812535236337}]}, {{
                    7.499999999999998, 6.934822938700115}, 
                    
                    Offset[{2.5, 0.}, {7.499999999999998, 
                    6.934822938700115}]}, {{7.499999999999998, 
                    18.492861169866874`}, 
                    
                    Offset[{2.5, 0.}, {7.499999999999998, 
                    18.492861169866874`}]}, {{7.499999999999998, 
                    30.050899401033927`}, 
                    
                    Offset[{2.5, 0.}, {7.499999999999998, 
                    30.050899401033927`}]}, {{7.499999999999998, 
                    41.608937632200686`}, 
                    
                    Offset[{2.5, 0.}, {7.499999999999998, 
                    41.608937632200686`}]}, {{7.499999999999998, 
                    64.7250140945345}, 
                    
                    Offset[{2.5, 0.}, {7.499999999999998, 
                    64.7250140945345}]}, {{7.499999999999998, 
                    76.28305232570096}, 
                    
                    Offset[{2.5, 0.}, {7.499999999999998, 
                    76.28305232570096}]}, {{7.499999999999998, 
                    87.84109055686831}, 
                    
                    Offset[{2.5, 0.}, {7.499999999999998, 
                    87.84109055686831}]}, {{7.499999999999998, 
                    99.39912878803507}, 
                    
                    Offset[{2.5, 0.}, {7.499999999999998, 
                    99.39912878803507}]}, {{7.499999999999998, 
                    122.51520525036858`}, 
                    
                    Offset[{2.5, 0.}, {7.499999999999998, 
                    122.51520525036858`}]}, {{7.499999999999998, 
                    134.07324348153563`}, 
                    
                    Offset[{2.5, 0.}, {7.499999999999998, 
                    134.07324348153563`}]}, {{7.499999999999998, 
                    145.6312817127024}, 
                    
                    Offset[{2.5, 0.}, {7.499999999999998, 
                    145.6312817127024}]}, {{7.499999999999998, 
                    157.18931994386946`}, 
                    
                    Offset[{2.5, 0.}, {7.499999999999998, 
                    157.18931994386946`}]}}], {
                  Directive[
                   AbsoluteThickness[0.5], 
                   GrayLevel[0.4]]}, StripOnInput -> False]}, 
               StyleBox[
                StyleBox[{{
                   StyleBox[{
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    "\"-8.25\"", ShowStringCharacters -> False], -8.25, 
                    AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 2}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.499999999999998, -177.9937887599698}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"-8.00\"", ShowStringCharacters -> False], -8.,
                     AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 2}]& ], TraditionalForm], 
                    
                    Offset[{7., 0.}, {
                    7.499999999999998, -120.20359760413541`}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    "\"-7.75\"", ShowStringCharacters -> False], -7.75, 
                    AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 2}]& ], TraditionalForm], 
                    
                    Offset[{7., 0.}, {
                    7.499999999999998, -62.413406448301025`}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    "\"-7.50\"", ShowStringCharacters -> False], -7.5, 
                    AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 2}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.499999999999998, -4.623215292466645}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    "\"-7.25\"", ShowStringCharacters -> False], -7.25, 
                    AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 2}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.499999999999998, 53.16697586336744}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"-7.00\"", ShowStringCharacters -> False], -7.,
                     AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 2}]& ], TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.499999999999998, 
                    110.95716701920183`}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox[
                    "\"-6.75\"", ShowStringCharacters -> False], -6.75, 
                    AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 2}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.499999999999998, 168.7473581750362}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}]}, {
                    Directive[
                    AbsoluteThickness[0.5], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}}, StripOnInput -> False], 
                   
                   StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {
                    Directive[
                    AbsoluteThickness[0.5], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}}, StripOnInput -> False]}, {}}, {{
                   Directive[
                    Opacity[1]], 
                   Directive[
                    Opacity[1]]}}, StripOnInput -> False], {"GraphicsLabel"}, 
                StripOnInput -> False]}, {"GraphicsTicks"}, StripOnInput -> 
              False], {{
               Directive[
                AbsoluteThickness[0.5], 
                GrayLevel[0.4]], 
               Directive[
                AbsoluteThickness[0.5], 
                GrayLevel[0.4]]}}, StripOnInput -> False]}, {"GraphicsAxes"}, 
           StripOnInput -> False]}, PlotRangePadding -> Scaled[0.02], 
         PlotRange -> All, Frame -> True, 
         FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
         Opacity[0], FrameTicksStyle -> Opacity[0], ImageSize -> 
         NCache[{Automatic, 576/GoldenRatio}, {Automatic, 355.9875775199394}],
          BaseStyle -> {}], Alignment -> Left, AppearanceElements -> None, 
        ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"], 
       LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Arial"}, 
      Background -> Automatic, StripOnInput -> False]}, "BarLegend", 
    DisplayFunction -> (#& ), 
    InterpretationFunction :> (RowBox[{"BarLegend", "[", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{
               RowBox[{"Blend", "[", 
                 RowBox[{"\"Rainbow\"", ",", "#1"}], "]"}], "&"}], ",", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"-", "8.246999837957148`"}], ",", 
                 RowBox[{"-", "6.705000148042851`"}]}], "}"}]}], "}"}], ",", 
         RowBox[{"LabelStyle", "\[Rule]", 
           RowBox[{"{", "}"}]}], ",", 
         RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
         RowBox[{"LegendMarkerSize", "\[Rule]", 
           FractionBox["576", "GoldenRatio"]}], ",", 
         RowBox[{"ScalingFunctions", "\[Rule]", 
           RowBox[{"{", 
             RowBox[{"Identity", ",", "Identity"}], "}"}]}], ",", 
         RowBox[{"Charting`AxisLabel", "\[Rule]", "None"}], ",", 
         RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
         RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.9002128896361423`*^9, 3.9002129285371065`*^9, {3.900213251976076*^9, 
   3.9002132614787955`*^9}, 3.9003172787258987`*^9, 3.9610407323562527`*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"ac950138-3c65-3049-9a9b-46ff9fbc04ac"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NotebookDirectory", "[", "]"}]], "Input",
 CellLabel->"In[3]:=",ExpressionUUID->"1ae11ea9-65a7-421e-8275-44a91f920198"],

Cell[BoxData["\<\"C:\\\\Users\\\\jamel\\\\Dropbox\\\\Latex\\\\PROJECTS\\\\22-\
12-reer-tot-res-pm\\\\Archive\\\\\"\>"], "Output",
 CellChangeTimes->{3.9002124575568013`*^9, 3.9002129151884995`*^9, 
  3.900317467118904*^9, 3.9610407324044056`*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"d58f8e71-906b-034f-b4d3-cda00c861e01"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<3Dplot.png\>\""}], ",",
    "m", ",", 
   RowBox[{"ImageSize", "->", "1600"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.900212258736236*^9, 3.900212258736236*^9}, {
  3.900212306387333*^9, 3.9002123586174636`*^9}, {3.900212419067602*^9, 
  3.9002124894338284`*^9}, {3.9002125957341394`*^9, 3.900212628473733*^9}, {
  3.900212659948821*^9, 3.900212718288415*^9}, {3.900212763116581*^9, 
  3.900212763669878*^9}, {3.900212936625597*^9, 3.9002129641191683`*^9}, {
  3.90021300846133*^9, 3.9002130389997168`*^9}, {3.900213077759622*^9, 
  3.9002131228386993`*^9}, {3.900213212067562*^9, 3.900213221975602*^9}, {
  3.9002132755635195`*^9, 3.900213279866276*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"7b53418f-9f20-4295-b92b-5b2469f74bcd"],

Cell[BoxData["\<\"C:\\\\Users\\\\jamel\\\\Dropbox\\\\Latex\\\\PROJECTS\\\\22-\
12-reer-tot-res-pm\\\\Archive\\\\3Dplot.png\"\>"], "Output",
 CellChangeTimes->{{3.9002124666609116`*^9, 3.9002124913556514`*^9}, 
   3.900212597521367*^9, 3.900212682029912*^9, {3.9002127137625036`*^9, 
   3.9002127201163435`*^9}, {3.9002129198358946`*^9, 3.900212964940361*^9}, {
   3.9002130120048475`*^9, 3.9002130402811813`*^9}, {3.9002130804960938`*^9, 
   3.9002131243672085`*^9}, 3.9002132820444155`*^9, 3.961040733479521*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"520ceb02-83f8-0547-91c5-76ca339eb1d5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"g", "=", 
  RowBox[{"ContourPlot", "[", 
   RowBox[{"y", ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "44", ",", "48"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"z", ",", "2", ",", 
      RowBox[{"-", "5"}]}], "}"}], ",", 
    RowBox[{"ColorFunction", "->", "\"\<Rainbow\>\""}], ",", " ", 
    RowBox[{"AxesLabel", "->", 
     RowBox[{"{", 
      RowBox[{"\"\<Reserves\>\"", ",", "\"\<FX Inter.\>\"", 
       ",", "\"\<dFX\>\""}], "}"}]}], ",", 
    RowBox[{"FormatType", "\[Rule]", "StandardForm"}], ",", 
    RowBox[{"PlotLegends", "->", "Automatic"}], ",", 
    RowBox[{"Mesh", "\[Rule]", "3"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.900317296434416*^9, 3.900317304149314*^9}, {
   3.900317340223611*^9, 3.900317357213151*^9}, {3.9003173915721416`*^9, 
   3.9003174148388824`*^9}, 3.900317935968397*^9},
 CellLabel->"In[5]:=",ExpressionUUID->"6c00bf97-3cb9-4bc5-893f-1ebda90d139a"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1:eJx1XAdUVMffXWCBBZZlC5ZgxY6iqGjsvkHNPmsUCzaMvfeAvWEvQbH3ggW7
aIwNjb7BoEaxgBVRFBTp6oILrNTvBdidvJvvHzyHc8/Mm5k78+szxH3MzP7j
rWUy2XJbmeyf3+X/6Un5b1faY2s98R/DZbAHw2+uTBf/MVzWvJXh6WUdGC7r
/obh0rL/GO5eNgFvwVvKBmQ4vmwAhuuWzcfwtLL5GL5cNh/D5b+7AzbPrwW+
WuCrBb5a4KsFvlrgqwW+WuCrBb5a4KsFvlrgqwW+WuBrxub51cBXDXzVwFcN
fNXAVw181cBXDXzVwFcNfNXAVw181cBXDXzN2Dy/Evgqga8S+CqBrxL4KoGv
Evgqga8S+CqBrxL4KoGvEvgqga8Zm+dXAF8F8FUAXwXwVQBfBfBVAF8F8FUA
XwXwVQBfBfBVAF8F8DVj8/xy4CsHvnLgKwe+cuArB75y4CsHvnLgKwe+cuAr
B75y4CsHvmZsnl8GfGXAVwZ8ZcBXBnxlwFcGfGXAVwZ8ZcBXBnxlwFcGfGXA
14zN85sEKV+TIOVrEqR8TYKUr0mQ8jUJUr4mQcrXJEj5mgQpX5Mg5WsSpHxN
gpSvSZDyNQlSvmZsnt8AfA3A1wB8DcDXAHwNwNcAfA3A1wB8DcDXAHwNwNcA
fA3A1wB8E4FvIvBNBL6JwDcR+CYC30Tgmwh8E4FvIvBNBL6JwDcR+CYC30Tg
K5OB/spAf2WgvzLQXxnorwz0Vwb6KwP9lYH+ykB/ZaC/MtBfGeiveRbAlv3m
4Hw5OF8OzpeD8+XgfDk4Xw7Ol4Pz5eB8OThfDs6Xg/Pl4Hw5KV8ztugT8DUA
XwPwNQBfA/A1AF8D8DUAXwPwNQBfA/A1AF8D8DUAXwPwNQFfE/A1AV8T8DUB
XxPwNQFfE/A1AV8T8DUBXxPwNQFfE/A1AV8ZAf0loL8E9JeA/hLQXwL6S0B/
CegvAf0loL8E9JeA/hLQXyLlW7FerXl+HZXy15X7+888tHe3YOn3RbB/RZz0
e8Q4vyvM5wrj4/qLyuXPoaI9SFce7+TxFixpl5VwknYRS9aL35vzYYf/NX+J
dH7MP4NwP3H+CnkYzva77PyP4f4zXHa+P7LzkO6PhkrH08B4GhhPA+NpaMk/
4riM4c3/THCfYel8Kjqj7HuGpfOrYH4VzK+C+VUwvwrmx/kcYXxHGN8RxneE
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
5nQY2ldDyajKUT1EvLNruwjFJTVtPsB6b7IXT/iA99uWjdZQx74tNZda8GR/
f2qIu6qmT9L/qNV9Hk+2/OjRTbVQQ+2/TJuhXsSThfJch5Travpju24nx0Tx
pKr7De/xN9V0+uR69+fs1xOb+XJZzY8qSrdNLWyUrievX3YIWrVMRb9uW1oy
QsQdmsW94Nc40ymjoy/li/Y25kTnu1VsVDTOLfL7hpU8efq1pq/3WBWdw1dK
WPiEJ66xA5rN+l1FA7qdfDorQ098V+7OPTncka5ocz1sj4hHaH+p/fikA33X
P+jglY48mad28Pt+1JHu37Nw58a2elL6cNKcxV529F5Jy1efM/XErc60uUUt
7GilfftibLP0ZFaePPZIjC1tuslr2+79PJEHPEzp+96O3lzdZvqAwzy5G6rN
qRVmS6fEDfR+J9rP2QOvjblYaE0nkq01wj/ryXajLMoo2n+/Z3/u/wfvqnGi
3g+lVvRclKpEt0ZP4m07bBs5sFg4vapXjZCvYn/b1ZN+nlgkRKjq1Ws8jCe+
96pX/VtfJKycGxwQJeK4rAj99/hCYU3jbo0e3+XJpz7pj6suKRQitvlNExxF
fTjv0qf28Vzhxsbqw5yX6EnrUtrDNcwoePbo1yB2oZ6ct9o8mibkCA9q1z76
IFtPNnnanx+QbBRGdArxXWrUk5GvT4d3zc8QdjZduMFNPM+AnIAd+998EuJn
lwzLEeVrWme+U61Jd7lXtTob+ivF/c/fubHexRyu5MzlN4UqnnQd1cWQeo29
B4yIWln9xkUNNY7+Jv4wex+dHf5j2DDmH8z+ZmzwHrltKy1d/O3WtUaHWXvT
3Mftz6Yy/C7v3Z9ezVi8s1WRtHzUv+rLr9cfiFt/gOHaTsO8/khjeGJw5TVv
vZk/Mfv37T2/2KW6qmi487O3tv9632yOXzbPCNm0O4zVm99kNiwMcRf90QH1
+6r/z3vn0ZGTs6e6KunPnQpzYvuw9tQ7Tcj7dOavnj2uktQ2k/mfbyOqNElK
5ckl/aYrof4O9MRCfs1PuTwZNSX2/N5ndlR+c/XyqS2YvzH781nPF338+Zgt
TYusElq0heX38yJVfaKzWP+zeeMepZ3lSVaB47y56RXxiRhfHoxt8Sg0T06j
nPIjcr6zeM9sv/f2Plecs1JGxxY9O8U3ZvGNub73gOxzDP9sRbcYA4KvDWTx
3pdBlzPD1Mx/meVjr+2RGXPOsvfCj3OHT1f2yRdeDMiYPFeMR1/7dWmS+j1X
CA6YNcLPjsWDY9dPd+44j/mzAZqh4yPF+Lz/g0VNfnbMEcaGp1n1FvdrSa+H
L4hvpuV+6VbwH5uSEz4IwVPujD4+m8Vb6z8VCAPW8eTY63WFfI9Xlve86nf9
0/q2TBG8ax32bVjE6hNmeZ3fIX7zwym7uBt17+6PPc6TSXN9wppqHlreGySm
Ha6ZcfgdN+6Ab1rDaJ6o6/by31AzlYueecCuvyerJ5nPLyddnnVxVwa3rv+B
I37i+lU5O6YrB+VwPb2+rf76A6t/73TpfaHTDzz5vNN/5vKFBdzQyrWeymYx
f2WuZ3zZ3K7Nl8NaejzhumHCJdZurpc8Dq728e41B+rxIf6o3xZzuyNdVX9O
ZSGZYXM+VMO3zfu/Oyjoywn25/J/YvJhjqfbBqd16PRGTg1VvV0r/c7if3M9
IMF0ZfDamYWW9623i91m1Q4vEMjg5iblJBafLza5LTcmMNwg+VCzDlksXjev
52NCtfh+bb5a6kNOw+SPb31OstQDq6ZvUn3f/ZfwwaOF846NrF5V81GtaR33
svqRef2Re53bvWh5j7tc66VTQjGrD5r3MyHz6gHbxQlc6zZZQ+5b4rsYLttq
/avfI1g9ycyv3qRnVUsGpFjqQ24vXr6vGZfFXVuXuH7HI5ZffLzb+LHvJ8gv
RH5BUf2TCcm25F8PY7scOnM9j9sROu3U9eqW+ip3y69I7lVVT4J9vK9PP6el
94tz1aVi/G2XFPA5p76WXly+6OjEGnpyu0qk4fQ+HT2w4/TxZdVF/xh75oN8
to4G1/pN/GH2ecScNI/aheL6p17pefuGlq76GpueJdqThS3ztqbn2tLJX049
yqykJ94NPYu3Rxst70nfz2kY49dcS58scevWsthcn2DvS59mVu/6tp2OLg7t
kzpejJ+e3u18fGukjm6cF/2Lj62erMq6dfj1NBfac9+hxY1Ee+pcFHh4ulxF
S2zHtNzRT0/qD+GXhHu50OiwrrdG9hX9W50JT+aHq+iHwCGdxmzXk0ZtBvT0
uWNPz9g0HaVspidHJ2StGuZgQ93+bEN2q8R4sH4L5c8t8oVP/hf6V50jxj/+
r54Ov5MlPN3fOmlsgJ582Re49uKiDEGf9PVTWCM9+YVf0LtnsoFztO/QzzSV
J6Fj2o/dnqqjR+3P07YBIr+pW9e79dHS8Q6R7k9E/RuzeHbDs8+1NPvjGZdO
F3jSY96EN35HdXR9Yuc83R88mXotZF1aKx3tXlSwq0iUF5eHEX1jmoj66evc
8XIwT8Z/CdzydKwT3cBnhMduFu2/56h3ag9HOn5w+mdfUX66hKy2zStyoms2
B+/6oStP4h+P3PbQz57eDg+8qhT18diHjl/3/WpHf22v/vXATp7sGHd3QdsF
ClrQwtkvUoxfF63btDP+tD2NH+M/oUVPnuQ/cWs5sYacZt4bG734DE9q1akc
ObSzDV2/dP3IX8T1/fjKIaC/Xkb1m5/d9xPt8apZ117bOOcJI6pU9u78Qox/
qr/w3BeWJ9xc8Xdgy5nifHve/uYwwCC0z+7XunsKT0rb9/JrFZotDIxxz9Gt
4cnIS5PrBIfHC29WvFXeEPOFHQVTTWEfznEtF86tuUnUt8WvB/W9fC2a816y
LvSVuP6t06fdGPvpvHDXzqX7bRlP0jTxOTK/95z76z8u+VzjSZjVkQ/L777j
1s061GbVe558/6vz6YY/fuHya51rFi/aa3nJu9bX+37jqGvKfVKZJw02DGzs
+c7EVe5d1bFHA558GHb+gW1oKXfX+2B2cENWn90xdbv4w+L94nNF4g/DCS1c
21m7mfWFvT+f2CEsuRPRUaduJHB7AU8G8YuPJUWz96nV76gvZl//xrXv1bBT
V9G+/1ijwZBzk9n71Er+/c9r7+jouMCRju3EeG71kXszkmapaa+19Zq0sWfx
i7l+9nl2psuQ7moadOpB3djqrL67MnDlgP019eRF6JMZAc909GwrW7f1Rt7S
XjyU3F4rnldW5qpD037Q0UUtxvjc/tf70klj7fzeivbr6cyhl5SOaurVtcHA
xV948tNQr1Z7Kino8tYzPmZ/Yflx4+/nB0/6he1H6xdnEr6M0BPN4L2JX99q
aZuaN5oV/+vvOcMWVe5p24YndxZs+DS10JlyJV2CI9uJ9vrJgMFNfJV01a2w
LldWsf4z/pzqp1jLk/CxbYIrd3CmGzd5+ziL/vryrqPuAUli/PTLZr+ZT1n/
R7ttV/cS5fPYlf3BXQY608jns19f6srqhRfaNZs50EdPfuqr8uhY34E+OUha
fOnE/F1eiyjuPseTlHUb7IptHWjtpS1M8SIOj55c/1uhgs7+euiH0jYsvjpS
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
zO3jYj6S8N7n8u2N7H3g3/mhSzIM7H1g/WaFsu8fZXRpj1UDo6+z+kuPk8/v
dtDoyVuvRcuz2psEk2Pe1RmVzOth7//C1XuWec74KrSvFlI3ZSbLt/d6lOZG
zNKTaw9HjDoWniLU3GCcPF/Mv/Txpsv+619wrRT0luFf7/nM+7nU6kGnKU6x
3Ob1l5dnyVh+PKTauIxYBct3zfeHKS2+c1d+MnAXrrdu9tZJT4Je0mqNd+dx
cTN+iqpnY6kfWe6PA8a1CfBT5FvqjVvso7db/ZrLnV4x8wcvF8t9F+f/c522
vlai/a+3nI/qwf5/PqEbG3/rvtjEpR9U2Dhe5smzC/MbB6do6cxYujXyKstf
a1c7r9q5hSfn8hvsm5zlQJf2dSq9v928fge6oEozT5rOsM+Pf2wO1vPE9+ue
ZyOvsvd5fb3d04O3yWnJzSpPmnZn9/8T72V6Wov54cQn99M7bmfv8aprf0lo
+kBGo703lDy/bO7P3ueF7U4cN+NPa7ri6FP3U5PF+DRKN6G0+jfLe632dVcu
89FmC4bO9NM7Sz7D3ufFPFo5amNGrqCZGd/LrUSUjyfvQotPxlre40X+Xpa5
cxfit68Z9K/3eQemRbQdWosnkzrN2rWoXrHlvVPUx1bXS61LuVGlqt233C33
u5b3L8MP+h29O6OQ87x3fEqNKkx/Fz04NeW8Tk98Pl9pPClLQ22vn/tjSRJP
zg+RnRBOOdJE1YS/7LfqyYKRL0Mb2NvRKlX6LpGd4MmBNccvOXeTU9/PJYod
ov0uNSYV9q4qox/uPnx8SIyP9y9t9ZdjQr7QTHD2DBzJk5ZPrY5OTjIJfUpv
/f3xEU8CXt9Lf+bwXbj0a4+JCW95cqWKZveMfkZhbMT95ptEfZ9e3WdI6/BE
4VhiT+vC4XqSaFtvdFDaUm5/v06jVtUS/feRyc65yTncZc/8m091YvzT9svs
lFP5XE7XGc5dW/Hk9AyX+YOuutCHVTo+zGqpJzfHTz/1www5nRwa+Uu/FnqS
0/RKoMe2z1z/oHMFH7N4MqZe2pmbR78K+35u8SbsIE/Wv532LOjGJW5ihNJp
TSRPPD/MaDx80Efu7MiTpzpn8KSptsnHnrcN3MfV/rldxHw39VjNl/132VJP
q7ZpBcU8WbMyaPedGqnCivPRWRNCxHy/QcC4msYHwtYi/adh58X8qeTD6Hmb
X3Juq1f0bijmSxF/fVrz+FYG93/lPdwO
      "], {{{
         EdgeForm[], 
         RGBColor[
         0.4714119999999977, 0.10876600000000013`, 0.527016000000002], 
         GraphicsGroupBox[{
           
           PolygonBox[{{247, 239, 15}, {1176, 239, 1127}, {1174, 492, 1122}, {
            239, 243, 15}, {239, 247, 229}, {1183, 239, 1176}, {1126, 448, 
            1125}, {980, 239, 1183}, {979, 495, 1177}, {448, 492, 229}}], 
           
           PolygonBox[{{978, 229, 492, 1174}, {1128, 243, 239, 980}, {1127, 
            239, 229, 978}, {1122, 492, 448, 1126}, {1177, 495, 243, 
            1128}}]}]}, {
         EdgeForm[], 
         RGBColor[
         0.2793680933852135, 0.17420961089494258`, 0.7194581245136196], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJwtU79LW2EU/fLezRKpU6eWFHSOWzdNCtZOmRpSnISSwXZqNxVK6Z/gUBD8
B9ziS1KMyahjBwdxcg5CVbKI4lB/nMM5w+Xed7/vO/fcc++b63xvfctSSquw
HHZcSuke1oMNYQNYFfkVHPYRLyTl+s6P4MewN4h/R0ov4Dfgn5A7B3Abfg12
Bmvi7Fcofg0/hT+CTZIwBsb5gbNF+D+uOXLdAv4Qtg/7Dwtz6OW6z3d15LZL
4sG7hfEL9zRxj4yvkrCGxmH9A3M4csz770KYH8syxo0QN+pSsz4fHN+h71v3
To4N4+8hd+LvoXshfiVTf0uwx5LeLVmTkbXeNAdyIWf2OYs7P8vSdy6EQx7E
Yn3yoC7E4zcxZzLx5N12Ji7hmU+tC3MnrtEqK94K1atb252QRqfGunWtht+x
309l7cB73H2LuIv4ZUj3wvzJYc88ep4Xzw+8D9QnZdon7s9DSThhjtuutx56
0wn1t2Jeh9aamv0LvbvIVWtq/MsQj6sQPnerZg0r1o25B2tFLo/m0/f9qmf3
5PkNXHdizT9nwjzLtX9f/R+wt6Z3b+xZ182XmPOh+XLOf73n3He+J86u+50x
fjcU79tXPJebEIfrXDPj7L6EuPfdb+G6nMtyqI9X8M+XDoh5
            "]], 
           PolygonBox[CompressedData["
1:eJwlkDFLQnEUxe//eZ2kzSEKAp0dHNoEB/0Gj9cYxIMUGnKzNj+CW+QkpLjE
c5E+QI0NLb6pDxDoC5dAWsJ+lzscOOfc/z3v3FdLB/FtJCLHQEGzLLLASMAW
ows+4YcgMoMvQQXd4u17SeQJ/cesgX5GV9FZ5J7NvvA0uHdO9gleEjzzAv3N
/CryzEw9w7LM+0FPwS/v30DOrFDvZpkb+CnI4ZegDr8HH8FvsFuu0WfkveD1
4Kk6fwUP8L4634FH9RvtVmF/ru7ZzDpYlyE4YjxG38Fv+MY+8ps66ju2a51G
8Il69wJ7Tf+2+q51jNldlfxfWoZl/QMa0jeQ
            "]]}]}, {
         EdgeForm[], 
         RGBColor[
         0.25731663553826206`, 0.4365602697795073, 0.8079439675745785], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxFVUtIlGEU/R/f35jOqrRFI1jTTumBtkhHojSjNDczDagJQrqYWjjQVDaC
RhC6E8wCN0IP3WSPRbgraB0FNpZt2gQlpe1so7XoHO6RWVzu/b+53/3OPfcx
By/n08OB53lLkBDyxHneA9/z2qHf4GAEZ3dhp3E2A2nGdyYy+xTOG2Gfgb0X
dg3sCQTbB92Ns/uQTvjHcNaGWA2e6XZIPey0zmmPQh+C9ME+gFiruNuPOHH4
TMOOQ/KQW/h9EnID9lffbOIjzre4f0d3GWMCMge7CzqETnj2VofiEQ9xnodu
8eyMb9GuCAwnsW9DToTmN4jfZyE9sFd844o5LsGnBDvjm29GcanTsgvAUQX9
FL9v4Wzbt++/eoMxPwZ23sI4kcVths7jzjDvBYYvrVqQ79eQIWHJCs/uwHKg
z8vQdBHv31Z9553FYkz6bzrjZRHfPapFVjiINe4ZBuJkLtTEXYPfrkZW61f4
/aezftjj7C7vkXfWak71iotj8n8Nd5KQK7AjadY4BXsXpA6+65APkCnfeqZe
MVmfCn2POPO56cyPdivkCLAtwOco9J/Q8HY4y4059uLuGHQ/pAS/977VgNhP
O+tz9nur+of50KYvv5uc9eJ4ZPWfUb0fOavjQ2fvJPXWY/Fc7axmX3zrqZRv
b/NdYskEliv7p6SY5HhF9d3pM+aTjex8P2JeFI5x2O9Cm58XsBed9cQzZ/27
qh4+Bv9aci48KXFO7mnnNCPD6v80/D8hzknx/TkwPqhXZFPTp1bcrsju0jwW
EWNNM/kjtH6hXa+5i6lvR8U/6zAQmB99OKPLvuEKxV1CdwfUD3yzJDz3NHec
P75NDBeczQ3538mbmvkOqSY59VhbWMYU0/yxVyu1H+c1U9ydvdoR5HZB/ZRS
rbY1L2Fkmv34PbQcyMe0cmL8KsXnzuObDdpRy+oD+k1o7us0b+SH+/i5sxn7
zdl2FuMwdJuzu5zXzbCMpaReI4fbmnf2YVL179WuzggHOfsWWB/NaS9P6nzW
L+fP/cK7lyLz74MuhDbz5O+serE3shnp0f5P6f2EYnQKA3cTZ4czRG6qxD/v
jmrGONf07dR/TVqY2c8x9XZBuyWnPbal3cueGdMeYK6cw1rtWnLP/i/pnHGz
geFh/CntG+6HX87ub3A3OOuB687ejISZeIvCXBR+5r7zzT34T3jP4W5SOysB
ve4MF2e3OjIf+h6PDNOa9kdWuXN2u7U3BsUPc2fdyCP3baWw0Y6JnxHxVtBv
5Coflv838toJSdU0p31ekN0U2TxuaL+Oic9I/syRe5P7sxE5/QcLkd7l
            "]], 
           PolygonBox[CompressedData["
1:eJwtkkkohlEYha/vv1+InWGBEnsUFiQ/mZJsTGUqZS1DmYVY2Atlo1jYmEus
KGtRZhsbZWZnx8Zzei3O/59zz33vd+973qzuvsbewDmXDzxI56clxrklMA3f
jzi3CL8AE+hBcAZfpyg3dG4YfY7+AAvwMVDMOQvocfgX9YnwavCN7qTmDr4M
atD1YAX+AHLh7fiPnH2PnkXvUT8PT2TtFF7u7ewr0MzeVDCHl4lOhkfBUWBr
KfAsncl9WqmdRLeF9m19owPeD2LxRthzzH+U/Td416ABrwf8wlvxD/F3vN1F
b9qGf4ImdAb+BzwJVOF1sVZA7QY1CXg/rK3hDbCWwFofug6d7K03LewvxMvx
5qknc/BRb2frTo34ld6yuVYN+pmzIjH2zTe8MnAbWCYj8FJwGVhmQ/A0b7XK
tAI+5a2XB+wpCu2NeqsymvHWA/VCZ+psj27CS1Ge7M0LbRZK0K/eZkSzosyU
ndbk6Y5P6GpvteqpeqtMlI1mLhvv5D8L9Ui9qvWWrTJSVpoJzYYyVtaaGc3O
ECiAb4H4wGZwl5ri0N6mO+vuq96yUE/Um5eI9V4ZvivPiGUXBza8QVxnbsL/
AAARYo0=
            "]]}]}, {
         EdgeForm[], 
         RGBColor[0.3427883657587553, 0.6330015421530486, 0.6761634656290524], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxFll9ol2UUx9/3/T1vF7rJlhVkf6CYsgka4YW6NBRtszDNss1NlyFUGGmz
pphbS5fbvNCaaAbVheKUmkKgUldB1KUXXjk3QyZroyKii+4So+9n5xtdHJ7z
nvd5nvOcc77n+zyP7Xj7xd1FlmWP51lW0XhU43LJLOnjGr+Q7JSs0M9qyQLp
kxoLjT+nLFsi6ZS+WGOV7P1ad1Iyq8yybm08W+O9GmslTbL/pTnvSE+yv6Bx
o2Se7D2yd0vqJBtsb5C9Qd/1kgHpN+RjheyLtPa69Kekj6ZYz5oHNa7yetbi
r0Z6s8ZLKc5xWeMVfQ9Lzkl+1fcm2ae17qEy4itkW6bxbhZ74mepv0ekt2ju
MunzZGvR+JqkL499f5Q0av20vj/S+LHm7ssiLwv1PSb7q/LTJv289B7pvXmc
57JkOzmUj8OSXbLvle2w5EvNv0e2rzQ+rDVD0h/ROFWJPP4ie7P0pkrEPOw6
fOLc1DsWastIfakBtVhehj98vS6pUF9JVxY1nql1JXJC/snDd/r+TN+dWjvm
ulCfb2T/VPa3qK++z0g/AAYkj0q/o/+NlfDBN37wie8Lmj9bthGNeyXHpK/U
eFPj53nko0Pz98hXZxG5Pey1q6WXjpMcpCJqhH2VvwcqUStq9rL2HdZ+3TrX
/jxydVayLY/ztGaRG3ytyyL37L80C9/sAa7oDWpLjau1V4/+VZWB303G4X1l
1PQBjTXyu0Zr9oFhjack7XnUjzo+UYbPd4s4wx95YAlcnaMOeeCE/B1xnfBN
LsjDUCV0znSVfOeRxzMp9BH/H3Lu3k9xhrUpbMdtr7Ze5fyRR3JLH7/pPNCb
9D4Ymy+9TXLKvXXFeJ7U/7N5YJw4m51/evqk+6Lafk5IH3Rc1Ila91Yi/9Ru
0PYbRdhHi+iXg5I3ZL9dhD7h3LEGX3XmFvqdGq42HqbyyCm9y/l7zD/IsHvn
pOM567WvGGMTWnM6D+xUOZ/E0u19yEPhM4On9Y4dTOKbnDa4N1c5t9S9w/F2
GnvEMWo7Nnq81vknr7fzONsF5lbMT17P2n7niPxMWKfXh/LgMfoNPNLjnIF+
nXBc8NOU88PcVs8fdf8RDz006foOCkO3ND6ZAp+Nrhf3wNY8+BJuajJ/0gP4
rtX83b5j4N9ax8ncf1Lg7U/XjLVL3ePN1mvc65wH3oF/nklxd/2Ux92xw/45
D3XjnCeMvRXG/GLfZetTzG80Rw2k2GeRz3nTXMQ5a3yvgbVW8yc1H3DdwU6v
a/S394MLZ3i9iN79j5e5x+B1fJAHagRuiO2AfF+T/l4KbiBG/F2qhP+eFHn+
1rmGJ4bNFVvL6I02jYdSrIWn4T7mtKToTXigyZz2hfPGGa75HAPu237fg8n8
xt5gC+7sdC/RO/jZ5nM+XQYG++RrYSW4g/3olfnulwnfe+Tt2RSc31FGD9Z7
z3qvRb/jfDZrbpNkkjOUUbcdrjX79TvPG1PU/oMy6sf+3HGDRdxlzOE+Bvft
mrunjDx8Xwlbn3n4qjmVmsFDHeYiaveD67fefQImeU9Qz+dTrDnmWq/0HXda
43gRvDZT7zI4oDdFH542Vqv8LpnSuLiMPbr8nulzre/6bgdT3EEb/L46VAbX
tfptct6xLDDW55bR3/DIbMd6zntiu2g7ueM8G5JxbWzDQ2esg4sR9+QF6w3u
hTrzMHwyZGzDPZwX/llShq+52v9gGfu/lOJOqJhP6GMwDs/9lkc9eLdO+27l
joWn15jTiKvF3HjcXA1nb9f+03B6GRisM67Awk7jAZ/JOONu2e77pd99AobB
3W3j/6jPQ53B3aCxx3mv+w6k93cZe+AFPgEzpXsKTqvyW2JlGW8szrROcW1J
URfq+aHfk7wr6YmFvo+ZO57//25nb/iN2KvNdbvNYejExfnpzzb3I/uAJd69
4InYJtyba/1maNEZNvP+4w5LEWO764KfOebzGez6vgdrxEUN6Y12c84R35Xc
mXDYdde4y/foXnMHZ2wv440IHn/Xv+fM9fRrMk66/E4YdU+BsWXGGZzXa2zf
b16Cn+jlG37vwXnjXrs5BQ7B49fG7cUUc8c8nxqCJTiF9y69sClFHLeKyBfx
73c++L/f/TLHdcHO+jHHvaWMta0a/wWa031a
            "]], 
           PolygonBox[CompressedData["
1:eJwtlElsjlEYhb///++VUCRqWJjCpglJiTbSKhJD1ExLdaBKupFYKFWLGhpC
20SQhqQSLNoYqw3BwoZEdGlhY2hJQzqIIWLByhTPybE4+c6573vv/e573ntn
19Zt2ZdOkqQMBJAVk+QIA1NTSTIanguWoAvRY0noAW3wLNANn0i8Fj4T/Mwk
ST16PN8LrNXLdwikia0EI+SvIP6U9drAdHgjmEtOC/nriU8Izq0h/pnxNehL
6Fb0b/Qq9EX0QfQPdBHzH6b9z2Pg5aCd+AC6El4RzV8ydpy529F72Os9Yzui
19TazWASehY51SnvcQJeAa7Dh8FZ+Aj5peRuBh/QW8FVYoPgDHw+a5Sofuwx
D95FfgGxxfoH4i/An8Q17YNPid5b/zQZns3YnMR7fIR/Y/5e+ARwD31H6yUe
+xvskbw6ih4XXRPV5gDIRNdQtYzgpv6XsdfwfrAcvTR6rjzMUX3ADXkFiuDl
4Bp8CBTAN4EO+DtwGt4QfNaz6EPwV8Fn1Rl11qroWg+CYvSXjHunB52vvRkr
TuzZMfgT4lfg/eAU+lzwv3yVJ8E1V+1V4+GMz6iz1oPvGddItcoG94PPrLOP
ArfgXcFcNVQtq6P/TZ7Le+2pvdVzj4k/Ag3k9qFPEmsGb1LuYfVyHuhO2zN5
tzr4LgTm1RFbFP1va4gXRveQekk1roKXgk74e7BQseC7pjszyBob0PtTviO6
K3nodtaqQjehN6JzUr5zunvyVN4+Z+wwfBnoS9tzed8U/C8aK4teQ2tpj/xg
j+W1er4yuKfV2+qBbfAHwbWVZ/eZtzu6NpfBWmKNwXvrjbhLfGd0bIQ5u+AL
iA+k3EOb4bngbcqerwt+A/QWaKwFXhM9VzVX7WdEvx0687ToO627rTdAb0Hv
/7dHe7QGexD+eygvO4J79RfohN/OmD/TmxLsgbzQnS4L7nH1ujwqCc5R7idw
Xu9fcC+rB9QL/wADx6mI
            "]]}]}, {
         EdgeForm[], 
         RGBColor[
         0.49260454863813236`, 0.7229295564202335, 0.46549482490272365`], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1: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
            "]], 
           PolygonBox[CompressedData["
1:eJwtlElIV1EUxt997z5IM9IKyiaUHEKsKMiF0CYCM7NscGrW/lmbiqCCzFBz
YdFgtqk2LaSFbW0VUpYVlLRooDKI6K82uLDQRVBZ9Ps6LT7e993vTu/cc052
/eHNh8IgCGqAB8fjIFgYBUE+PJ2BRvRSdBe6Ar0H/YkFB1wQFKD7QDb6CH4v
85rx6/gexd+IV4BuhS8DHn0SvQK/h/mV6CZ0EbofXYtegO5gvzb0fPg4Y6tZ
mwK+MG8AXYh/Hf8Z+hb6Ml466IGvYk0vfgI/DT4VNKIr0anwJeAGeg76DfO3
eLtLgr1a8PrROfgtjPUx9gidj+5A96NfoFdy1iR6ED2FNbXoTPAdncQvgjvw
AV2KPxBaDBSL1/jF6BTWv4I7xirwZoFx5ld7i0UDvBVvIjJPZ4ToY2A2Y0+Z
81jvhL4a2hlr4We8xaaL+WfhdbHxUfy98BxQ6GzNYngTc547i2EP+5Uw9gTv
CsiF74rtLUbQu+FZscVCb5ANr49t7yTrz3mLoWJ5Ar0VvQa8D+2MU/Dq2N7i
HWM18CrGmp3lhHJjG7rNWU4oNzZ4y726/7mlN9HbXGD9XPRF/HZna4oVT29e
Hnjg7U66m/5J/3YJ/Vm5BDrhO2P7N+V0KToEnaHl4Dy8fWAstDVau8nbv6km
VBu53t7+D3MOojPQqc5qSLWUAN3O9miAb/dWC3pDveUvvm3KDzAjtiI8D18E
7nmrKdWWxjLxv6KnO8uZ3/ijkdXGOjCBHgZlzF0PhvBGvHHlfBr8DsgKrWbv
wqtiewu9kd6qBFxzdifdrVz55Cwmis2kt7N0hzH8/eoHzv5xB963yGqxTDFB
L/fWC7RHu7eeod7x7wz4TW9zFbNubzFULOv559uRxUCxUE3e99aT1JvK0R+9
1bhqXTU+DT4cmacYKBbaQ3s1ozPwf0TGFQPFQjFX7E+Dn5H1BPUG1eigtxpU
LSpHa7zllHJLPeGheGy1oppSbSUjq331rCH8t5H1CvWEl+iZsZ2lHpXnrYZV
y4phB/ovdh2rGQ==
            "]]}]}, {
         EdgeForm[], 
         RGBColor[0.6881121141374833, 0.7427868728923477, 0.3094943852140082], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxNmG2QlmMUx+/nvq+bxoelMS1SEZY0VDNSjE9CpEK+GLsZm1Saancbu9WX
yjQyKG9jGHY1fVBD5APSi41Ftq0lRagYeflQXiovY8hr/r85/2fy4cx1nnNd
17mu67z8z7mfwXc039yUZ1k2r5JlhcaRKcuGwmucXmbZIU3eqfER/X5O8m1a
9Ewe/HtaP078GlGd+BqtuVLywxp3iy6TfJ/Wn6i5S8WfoPFa6XpJ4zLNt+eh
Cz2j8lhfK/4D7bld40aNwyTbyhn6PV6/TxN/k/ghGreIlmcxvis6rxJjt/lu
0avib9T4qfb+hW6de6dkL4vGVeLMZ30u+q8X1er3BI+Nkp+kPSO1dr/Gqbr/
t5JP0djjuz2vNf38xlqPo8xjvx9E92n/ddqzWbILNE4Q7ZB8vMaGInRhd+x6
n23bpfFe3iF+axHnnKP1o1LwHxZxl4Oi+Vr3YCV0LtW4TLQzD9nKSsyv0J46
jXeLHhZ/unTNEn+R9K0ogl/IGRpnixaL/z6PM9jfvwx5l9YuEU0t4uyBks0Q
tWj925It0zhIa4en4HdKdkYZazqL0MW+tZpbIPk9+CGF7/Alew5mcfcDtif2
JX4+E/VmYR98iU/3FBGX2K5N+vZJtt3r9oq2+Te0SfS65xg72S/q8boW6dwm
PXM1ttn/k0TPSf8l2FTyYRo34BPR05KvFj0lWmUeGw6xvbHzQ1nwz/iMjb7H
css6rAcdyC7MI77bxV+ewj7Yqc5+wy+L/qcbP++wr8mpp/OIs099R952inTX
FxFjb6bw2Rsa3ykiHrrF1zk3ydFm6Vgvulm/d+VxBjE1U+M60VWSj3acn+j3
rvSbiQ/i5B0wRPNjJLtENJa8dK70FBHbrTqrPo955r7QnkzyLzX/SebYF63T
71skn1VGTCD/OAvZqZXABLCBnAU7hmpdBzleRswRe13SvUn8FPFziOU8fDvG
PnhR9EIW/r3HPl7iHMMurxVxTqm9LeIHSN6s323iW0Uni/oX4T9imP3gF/4e
RJ6ImrLApGnGpXdT+HVLir1b7PvbRK+IRmr9/krkIXmDjkV+I/brrcR9wbDr
jDlgK/e9owyf7Hf+48/59ulcwL6I+7DvWu8FO4l/8HOs5XX2zVjzhWvENdJ/
Shn3OSpdD6Q4636NfSpRC9g3uBJnkRdD87APsd23DF/gEzAPnCS/8Se2wS81
lcBp4mNBHuun+P744Jix/Fbj+cQibIR9OLPiNxL75MAa+wu+3XnR1/wI7Rue
h9/QM8E+XuVzyLkzi8D8Ya5J+JyY+dK1r8b5OsJ6RhdRAz7PIkbwLbF2JA85
7347Bea+lSK2lxrzv0lRX7/WvivL8EuLc2qGc/Au88QJ8XKXeWw33WuwXb3l
debxy8Ei/HRIOn9MYcMjKewIz1xuLPhFax9L8Y5HUxD8tDLiqc25RE7NcYxV
f8ODSWATuH2V5WN8lwbfjXfM9J2brAe+0frxO7Jm6wSHmrzmnxR7jxQRs+Mc
q+yb570NzivO6vWduA+16AnXI7Dw8TzwbLPXUCOYf9K4Wv0NX+u86Gcs6jYe
7S8Cx8CzwWXoPLsM33bZv/8WkRunlVHLqenU+T9T4MMfKfIAnjwYaZ/iz19S
vOU7rZ9sG/JeerHJ5uf77djqfWMXGLbTNZpazfwC26fDPtrsvDjZ+ULMkxfP
u+aQB4udUw2uKZ3GT2xIbVtjLH3dY3WOekeN2KV9F0tnr97RkwIXtqU4s6OK
w84x8PNX0U+iQ1n0YtT9fvYdfQj+OLeMe76XAk/B1UoKv7EGTOxMgcWbU9yF
eksN7WtM4C1fFYGJX6e460N+96nGpEmOw9mOPWoSvh+Uwg/1tv8y92T0MuBI
i7FootZ/oN83lBHz0x2TNcY5zgBvmm3rQ377Aduxw3bcW0QN/kjnHvWa3Vn0
kg3GKTApMw6/ZZzJUtjjScf9b0XESh/dZ6z72qvL2F/vGCAOa/x+cHWuMbHb
WI1tqn3VduNiq32JXdscT8yD8fRoYB88OUjfjQ5sS72nd6H+X5giR8gV+pg9
nqO/qHOPCi7Ocs1qdw2FB2tbje3bfWa1H9xrXewb7L631fdkPdgMdlOTvnWO
/ay7HC4CY/9O8X582mzb4wN8TR+3yHFDX01vx31+LgKvKmV8g4yzTVtszybr
OWhfc7cV3rs+RX+zIR3vNTmj23aiF/rd3zZHU/Q31Mq6FHZY7rg5q4z6u9X6
+OahZ8L+440R1d/4ojk73m8S38T5VMcRcnp+3rfC9X2137vQcYKN4ME47HzM
ftzgvKb/o4+5wvm41jHexzFLPrRbJ28glsl/ch8/t1t+zHV6oe/Tbruttq2q
vTUjfhno7xVwD8wf4t660W9q9h17HI/0gPSCVbxZYjy51/0XfiDn6p139Ftr
jXUbHXPoAvNW+jzWnWncxyf93R/Qv4AXxMN5ZeTp+WXkaqdt9JMxcbft0N+Y
Tq5u8plDvBcdJ5Thb+II/RPd24BPS/2dtdjv5v0pRT2gj37D3wt/FBGzfYxT
LbYXNpycoqeZUUbfhH56MGox9bHWOHbAsUquX+944xuCbzy+I8B1vvP6Zce/
w9FTrSW8bYDljY4H1hIrxPtA94fUbbAGe9H7n2N/s7fR73zR81W92+0nsLmr
crwPw7/EwHD7a5jraptrK/ecZFv0+tuBPfSemWv8Lv+HwH8J6EHHBr+X70re
zLcr37ANWvMfHCAjrQ==
            "]], 
           PolygonBox[CompressedData["
1:eJwtlEtIl1EQxb/HvSkElas0ULOwTAqDRIvaSC/tKW4iVMJHWZRKCdUqWlQU
LVoELSxo0SJbtKikwqRINM1MraAHgY82WailC9Ms6ncYF+f/P+fOvTPzzcy9
GZX1JXVREATlwIE+ftaFQTALfx8HwQofBNfYcBedCW/FnoauQ7dgb2Atif9s
zuRiGwMF8ETwlfVu9Br2Z6FfwuvYH7KegV6FHgC58AAMsF6F3gcvZqkH3YXO
5nwjuh0dojOxHwNL8NXmjC8Dz+EX5RN+E3SwP4899zhfDX5hSwHN8CPgLzwZ
3IeXg0n4LKiBHwZjnP+JLoWXgZHYfMq3vqkfXo39GboXvZtY+eABvIO1Wmzp
4CG6HkTYJpz5ugMWOoN4EfgCHwaF8FtgPjyRM6ci8yFfIVoN0zfoW7Z6q30n
ehv8j7Pc9U36NuWgXFTTZvIdQm+PLMYQ+gS6G9s5+UBnoivgp1UvdAs6NbKe
P4EfB12qLXotfBUxG+HXgUNvAhew3wZX4IOx9VYzMYj+ENtsqef96Bl0amgx
k7wNoXpZA1LQLxQjshno1ICyVhtZDSY4m4A+GVmNptCv2JOj3ECPeol9PLKc
lFups9xusOad1Vi1Xg/ewd+APHg++Ii/jc5qox6r16vB0dBqUOBtpjXbV9mf
ga4Go5HFLMM2GVvvlbNy3+NtVs5zZoe3GqvW+gZ9y2P0AbaeQS9Ce293YTF6
HjwNXA6sJunw4dhmRz1Vb0ed3b396B/w6dh8qYfq5Xhss68Z16x3gIbQ7lS7
ZtlZ7dWTp/ApsAB+kP2/4d9iuyu6E7obRd5630pOhfAt3maxCZ2neM5y0R3U
XZxx5kt3RHdl2tndVAzF+hRbL9QD9UI9VC/PYt/gbOY0e+1gM+dXeoutNyrL
W01V29foXfCl3nqjb2yTb2e+NPOafc2AZkEzrFmuACPw76BEuaI/B9bTQ97e
PL19esP0lu30FqsP7IU/ctYr9bA3tjXZ+kExvNLbW6oYVfC3zmYtgbWm2GIq
tt6wS7oL3mqpmV7u7Q3UW5g09/aqBqqFZiKH/f/m3lbNaDK2/+FKunI=
            "]]}]}, {
         EdgeForm[], 
         RGBColor[
         0.8567140907911802, 0.675737811932555, 0.23895588067444876`], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1: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
Je9Pf/4DYRxVlg==
            "]], 
           PolygonBox[CompressedData["
1:eJwllMtLVlEUxe93775FQRZh+dG7DCwsSrMoDFKyCHoMGqSDBlHUxNAMiV7/
QDWLpk2CHrMM1DRLECQNTWtQDfIxbNJrkPSA+vot1mB931p777PP3ufsc9ef
bj/eliZJcggE+MXPGQy18J/wNWBpATu21jxJPqJr0SX8U1mS1GPrx3cSXYlv
DlsF/mfY9uI7BsbhW7EdhQ/hvwh/ASbh/8BN/OfQm1n/Nbx3M7Zv8EmwA87S
5CGxHegOYq+jL8B3g154Fb7LBD3hfx+6lTUlfG/Rg8RfBbvQG8O1qWbVfhgM
J67xCLwLf1nqHGOsnQUH0PvBNL4txGSpz2ABuil37lFsB+F9xJ9CF9ETWpvb
9wpbRnwPWIY+gV4Nn858lg3oqXAP6qUavQf9A2xPXNMcvD58luXEdObOqdyX
QB38e+bey0E3+iX6WsFnoLPYyZrHqXMuV6+5724FtsXw89iGie1CV4R7Vu9N
YEZ3S8yN1Hemu2tAr4SfZc0mnQ8YQt8CRXxf0C3wR6AsXLNq152N8N8X3ls5
+uHzwV14DXit+SP+duqZ0ewsCp+VaqzJXaNqVU/qrT1cyzrwl/ge0AIfAOOZ
Z1iz3Mj+3eh3mfdKwX3WPg3fXZH43vCMadbUU6PWEr+q4Dtekrsn9aYZmdV5
g6qCa16L/3d4L72pP/DP4dnWmXwiV05MZ+oaVav21N6yzcM3ofeQ+g28xz8a
vmvtMRJ+Q3pLehPbwj2oF83oA/gH/HWpcyiXZkKzoRnULG5gjzupZ0Sz8jz8
FtXjALw6fJZX6GEQ/0L0vdQ53+hbET5bfSP0rWgLz7a+AfoWjIVnWXtUstdM
eJaUQ7lKmWdFM6XZ+g+EEomV
            "]]}]}, {
         EdgeForm[], 
         RGBColor[
         0.9028100661478599, 0.4569724513618686, 0.19258663813229587`], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxFVDtrVGEQ/e69cyMWqyTFWohsFi0ERUlhZV5WsTApbIMbtNI1j1+Qf6GV
ko2FSpJG2RVUkigIphBLC038BTau2Y0Q8HEO54jFcOfON48zZ+b76reWri/m
KaVlSAGZwM84ZAh6JUtpHsaL0Pdz6ePQe9Dv2t4spJfwHcj0Pwz7iUhpivGh
uAX7T8D2O8lnGLY6ZDrJ97VzrEPWIIOwb+D7zbbBTDHEUCukM/ZymVIDZ2dQ
637I/14IJ+sS+xZkG9JMwsszYh5zb8x5u1S9hmNpv5CE66qxEXs3F/6TmfLO
Qn+XqTfmHIEcmk/WfOO6b42BccTQNCcLxkOd8T3XZZ0fuXi4E6rRxPcX/Heg
L0HvQ38PfTGEl/0wdiCE9QvOj6OvZZwdM0+bkCrFM7oE+1wmH2Kjzu+sd2Am
Ez83QvyQJ2InH8Q8WgoDsTAXc3L+Xe8SueIOVJxnwHwytuo61yCnQ/g4z23y
A/0cbB1yAuGefgzxewTfA9u5Gx/YJxyemad9z+NhSH8Q//dmzLyQn88hLDdz
4fsT6vd5IV/ion/duNlL3bvHfeyHYnsh35p3sgXbSq494KzYC3eAfHQ9U+7F
ju2vQpy/NAfkhXmYg3eh8H2pef95T6/kwjXl3aROrtq+Pxv/7g3sj0NYPhXi
rOOzquc9ay7IyS589iCTyL8L24tQr53QPhI//fqw/fRcVkL/c75/B87/xHVZ
v/RMyOFR/D9C4PlS+z/ve8o9arj3vVCPXwv1wJ74LtH21L2v5sJJO+dY8V6R
5wn7HJrHwjlW7M99mXHMpnmo+g0rjXPG7w4575iH7zgfKYWhEsrZ9ozWze2a
48eNgfuw6rrkv2/eyEHLe3LK+cn3kGPZd9s5c/fRcp5p3x/u3aT7pf1s6K2Z
LPXebPle/wX21ajK
            "]], 
           PolygonBox[CompressedData["
1:eJwtkrsvg1EYxs/5ej5hqKYDC4aGhKQi6S4pEwuD3XVrSTua/Bcs7hYGBJNL
BImEiBgtWn+BRWhJJC6/J6/h+fI857y387xfZqY8Voqcc1kQQI3PNAfD3rn9
hHPNsXML6En0MfoIjMJTnN3DS8TfoEfIbYevgRr6A0zBT0CbtxopanWjL+EX
II8uoq+5j0FLsB7qdQ4e4IfBeiXRB8Fm0mxn4A5e5uzWW03VXgHv3moWguUo
V2+qw59AHj4AquRXgvFN0Ah/5mwwshjFvqLT3t78q1hmvorsTafoLHoDvQWa
pEHR20zf5D6CL7zJ6T3cLYIX+C4YhxfIfyP3h5iGYB7Iiz70Hrld6AlvHvcT
Ow8y/zN1cNcbW2/12FZssNppaXmJrnvbiXaTBDuRvbGqXYNPbzHrwTyVt0Og
NdhOtVv1VO+5YHcZzmaDeSbv5IG80M61e71xCb4sv73tZDVYjnI1Qy62GTWr
PJAXlYR5oRzl6h/QvyAPOoP9M/p3tIMe9B8Eo1mx
            "]]}]}, {
         EdgeForm[], 
         RGBColor[0.857359, 0.131106, 0.132128], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJw1UDEWwUAU3CRLrVF7ngvkAloH0CNUVsFlaBBlKk6kiy5FrBRqM++PYnZ+
fmb+zt/x5jDfp865CZABAccWeKP5csYDcAt0QAI8cNyBxpmG/2rgq5qamJqX
/Q6NKeooD7217qIuT8xHf6N7Ws2ml3lycVDd98ahZ9pGGRbe+Ai+ecu69paF
fu4yxPcM/R34DHxQP/Hv5C1bQc5MQy0zBr0J96Ceu/zfiPdVyrWEPgAj9C7g
q+bznkLzS29ZuBvzcBY19JTSrLztxpmVtFH6Hz/TQ34=
            "]], 
           
           PolygonBox[{{1130, 326, 31, 1129}, {1118, 304, 752, 1384}, {986, 
            498, 304, 1030}, {1119, 428, 429, 1182}, {1241, 573, 498, 986}, {
            987, 497, 573, 1241}, {1172, 226, 428, 1173}, {1384, 752, 226, 
            1117}, {1179, 31, 497, 1180}}]}]}}, {{}, 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{940, 1045, 1130, 1129, 1179, 1180, 1178, 987, 1241, 986, 
            1030, 1385, 934, 1118, 1384, 1117, 1172, 1173, 1120, 1181, 1119, 
            1182, 1121}]}, 
          RowBox[{"-", "6.8`"}]], Annotation[#, -6.8, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{958, 1067, 1021, 1135, 1063, 1343, 1064, 1344, 1209, 1208,
             1295, 1294, 951, 973, 1059, 1339, 1060, 1340, 1013, 1134, 1052, 
            1399, 1053, 1205, 1204, 1008, 1279, 945, 971, 1200, 1199, 1269, 
            1268, 941, 969, 1046, 1333, 1047, 1132, 1131, 1329, 1037, 1244, 
            989, 1242, 988, 1243, 1032, 1323, 1033, 1324, 1190, 1189, 981, 
            1229, 1031}]}, 
          RowBox[{"-", "7"}]], Annotation[#, -7, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           LineBox[CompressedData["
1:eJwVzjsvg2EYBuBHqgaD2JjaYJJIGKQ0JlGGOsZuwSbqOPhH/oBTyiKRkpCW
hak6WqiN6oDrG67cz333zZcOrO+sljoiYo3jVEStM+JZVuWLfJTdvCb0umzI
huzhgzf9XX7SJJeO+JYtvmjzw4R9W554v+XOuDd40E9J27o4s51TtV3Qa2vJ
su2SK8p6yT7s/nX3uf9kvxyxTctduccYM/qorHlzTUbPUrHdcseN/cA27k4x
656jQE5/8nuFQX2I++S/k+dIn5T7yfe8OdSn3JssupcossA8y6zwD8RhNSg=

            "]]}, 
          RowBox[{"-", "7.2`"}]], Annotation[#, -7.2, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           LineBox[CompressedData["
1:eJwVzL0ug3EUwOHz0kYTg9i0C02Ucg12rF3poPUxYXIPxIC7cAsi1FcTTMXC
ViYGUh1Ig8TzDk9+55x/3xZrm5WNJCKqHPZH3GciHvVOn/RBB3mmbW+ns77o
EJ+82jv6pl0d4Zd3+49+6J/mSbK+sYd2tU9H3XP6ZR/Qby25rZuPzMPa0xO3
Uxoc2/PuYT7jnIv0zb3gnpgvuaKZvrmPuRe5sd/Scmuybd6hwpL3OjV27bNa
YoJxykwyxzzTZPxuSrO6wJb52v/umWdYsy/qsq6ywr79gH/jFTPy
            "]]}, 
          RowBox[{"-", "7.4`"}]], Annotation[#, -7.4, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           LineBox[CompressedData["
1:eJwVzzsvg3EUwOHjNlASlxFDF4PEYBCJxCISMbhTJWmJD6CJwaAVFRGJYO1H
qC4SrDZfwW3WWix2EunzDk9+5/zfW970XmF1vyUictTaIl7bI9544YN3xjoi
urXBp3vqWtcv7eXQ9T79dlbVW2rc2f/1R+/1gcek9pIeM0vG81k2KduntIsU
nfQk32eaEdcH9Nc7+vVP55wVzE/mM/Mou/Z5zekOec7tMzrEMIO0OlvgwPzs
+QvzOEucOFvUS5Y5sq/oBOuU7Wt6xQZFe0YnyXKa/JNes0XJvp38HzdUaAKB
nC0v
            "]]}, 
          RowBox[{"-", "7.6`"}]], Annotation[#, -7.6, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{1074, 1406, 1075, 1070, 1100, 1401, 1099, 1158, 1069, 
            1098, 1393, 960, 1156, 957, 1392, 1096, 1020, 1300, 1302, 1301, 
            1342, 1154, 1370, 1371, 1369, 1094, 1372, 1056, 1153, 950, 1388, 
            1093, 1012, 1283, 1011, 1284, 1337, 1336, 1150, 1364, 1088, 1363, 
            1089, 1146, 1145, 943, 1196, 1195, 1194, 1003, 1331, 1043, 1330, 
            1042, 1256, 997, 1254, 996, 1255, 1327, 1326, 1140, 1141, 1085, 
            1184, 1185, 938, 1139, 1170}]}, 
          RowBox[{"-", "7.8`"}]], Annotation[#, -7.8, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{1057, 1405, 1058, 1051, 1151, 1188, 1187, 1091, 1365, 
            1050, 1090, 1386, 947, 1147, 944, 970, 1198, 1197, 1004, 1267, 
            939, 1186, 1044, 1332, 998, 1257, 1259, 1258, 1328, 1144, 1362, 
            1086, 1361, 1087, 1143, 1142, 1171}]}, 
          RowBox[{"-", "8"}]], Annotation[#, -8, "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{979, 1177, 1128, 980, 1183, 1176, 1127, 978, 1174, 1122, 
            1126, 1125}]}, 
          RowBox[{"-", "8.2`"}]], 
         Annotation[#, -8.2, "Tooltip"]& ], {}, {}}}], {}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, 
     Ticks -> {Automatic, Automatic}, AxesOrigin -> {44.0000000000001, 0.}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, AxesLabel -> {
       FormBox[
        TagBox["\"Reserves\"", HoldForm], StandardForm], 
       FormBox[
        TagBox["\"FX Inter.\"", HoldForm], StandardForm]}, 
     FrameLabel -> {{None, None}, {None, None}}, DisplayFunction -> Identity, 
     AspectRatio -> 1, AxesLabel -> {
       FormBox[
        TagBox["\"Reserves\"", HoldForm], StandardForm], 
       FormBox[
        TagBox["\"FX Inter.\"", HoldForm], StandardForm]}, DisplayFunction :> 
     Identity, FormatType :> StandardForm, Frame -> True, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "GridLinesInFront" -> True}, PlotRange -> {{44, 48}, {-5, 2}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   TemplateBox[{
     StyleBox[
      StyleBox[
       PaneBox[
        GraphicsBox[{
          
          RasterBox[{{{0.471412, 0.108766, 0.527016}}, {{0.2793680933852139, 
           0.17420961089494186`, 0.7194581245136188}}, {{0.25731663553826184`,
            0.4365602697795063, 0.8079439675745786}}, {{0.3427883657587551, 
           0.6330015421530483, 0.6761634656290528}}, {{0.49260454863813197`, 
           0.7229295564202334, 0.4654948249027242}}, {{0.6881121141374825, 
           0.7427868728923476, 0.3094943852140086}}, {{0.85671409079118, 
           0.6757378119325553, 0.23895588067444884`}}, {{0.90281006614786, 
           0.45697245136186904`, 0.19258663813229598`}}, {{0.857359, 0.131106,
            0.132128}}}, {{
             Rational[-15, 2], 
             Rational[-225, 2]}, {
             Rational[15, 2], 
             Rational[225, 2]}}], {Antialiasing -> False, 
           AbsoluteThickness[0.1], 
           Directive[
            Opacity[0.3], 
            GrayLevel[0]], 
           LineBox[
            NCache[{{
               Rational[15, 2], 
               Rational[-225, 2]}, {
               Rational[-15, 2], 
               Rational[-225, 2]}, {
               Rational[-15, 2], 
               Rational[225, 2]}, {
               Rational[15, 2], 
               Rational[225, 2]}, {
               Rational[15, 2], 
               Rational[-225, 2]}}, {{7.5, -112.5}, {-7.5, -112.5}, {-7.5, 
             112.5}, {7.5, 112.5}, {7.5, -112.5}}]]}, {
           CapForm[None], {{
             Directive[
              GrayLevel[0], 
              Opacity[0.5], 
              CapForm["Butt"]], 
             CapForm["Butt"], 
             LineBox[
              NCache[{{
                 Rational[-15, 2], -87.5}, {
                 Rational[15, 2], -87.5}}, {{-7.5, -87.5}, {7.5, -87.5}}]]}, {
             Directive[
              GrayLevel[0], 
              Opacity[0.5], 
              CapForm["Butt"]], 
             CapForm["Butt"], 
             LineBox[
              NCache[{{
                 Rational[-15, 2], -62.5}, {
                 Rational[15, 2], -62.5}}, {{-7.5, -62.5}, {7.5, -62.5}}]]}, {
             Directive[
              GrayLevel[0], 
              Opacity[0.5], 
              CapForm["Butt"]], 
             CapForm["Butt"], 
             LineBox[
              NCache[{{
                 Rational[-15, 2], -37.5}, {
                 Rational[15, 2], -37.5}}, {{-7.5, -37.5}, {7.5, -37.5}}]]}, {
             Directive[
              GrayLevel[0], 
              Opacity[0.5], 
              CapForm["Butt"]], 
             CapForm["Butt"], 
             LineBox[
              NCache[{{
                 Rational[-15, 2], -12.5}, {
                 Rational[15, 2], -12.5}}, {{-7.5, -12.5}, {7.5, -12.5}}]]}, {
             Directive[
              GrayLevel[0], 
              Opacity[0.5], 
              CapForm["Butt"]], 
             CapForm["Butt"], 
             LineBox[
              NCache[{{
                 Rational[-15, 2], 12.5}, {
                 Rational[15, 2], 12.5}}, {{-7.5, 12.5}, {7.5, 12.5}}]]}, {
             Directive[
              GrayLevel[0], 
              Opacity[0.5], 
              CapForm["Butt"]], 
             CapForm["Butt"], 
             LineBox[
              NCache[{{
                 Rational[-15, 2], 37.5}, {
                 Rational[15, 2], 37.5}}, {{-7.5, 37.5}, {7.5, 37.5}}]]}, {
             Directive[
              GrayLevel[0], 
              Opacity[0.5], 
              CapForm["Butt"]], 
             CapForm["Butt"], 
             LineBox[
              NCache[{{
                 Rational[-15, 2], 62.5}, {
                 Rational[15, 2], 62.5}}, {{-7.5, 62.5}, {7.5, 62.5}}]]}, {
             Directive[
              GrayLevel[0], 
              Opacity[0.5], 
              CapForm["Butt"]], 
             CapForm["Butt"], 
             LineBox[
              NCache[{{
                 Rational[-15, 2], 87.5}, {
                 Rational[15, 2], 87.5}}, {{-7.5, 87.5}, {7.5, 87.5}}]]}}}, 
          StyleBox[{Antialiasing -> False, 
            StyleBox[
             StyleBox[{{
                StyleBox[
                 LineBox[{{{7.5, -87.50000000000007}, 
                    Offset[{4., 0}, {7.5, -87.50000000000007}]}, {{
                    7.5, -62.50000000000012}, 
                    Offset[{4., 0}, {7.5, -62.50000000000012}]}, {{
                    7.5, -37.500000000000014`}, 
                    Offset[{4., 0}, {7.5, -37.500000000000014`}]}, {{
                    7.5, -12.500000000000053`}, 
                    Offset[{4., 0}, {7.5, -12.500000000000053`}]}, {{7.5, 
                    12.499999999999906`}, 
                    Offset[{4., 0}, {7.5, 12.499999999999906`}]}, {{7.5, 
                    37.500000000000014`}, 
                    Offset[{4., 0}, {7.5, 37.500000000000014`}]}, {{7.5, 
                    62.49999999999997}, 
                    Offset[{4., 0}, {7.5, 62.49999999999997}]}, {{7.5, 
                    87.49999999999993}, 
                    Offset[{4., 0}, {7.5, 87.49999999999993}]}}], {
                  Directive[
                   AbsoluteThickness[0.5], 
                   GrayLevel[0.4]]}, StripOnInput -> False]}, 
               StyleBox[
                StyleBox[{{
                   StyleBox[{
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"-8.2\"", ShowStringCharacters -> False], -8.2,
                     AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -87.50000000000007}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"-8.0\"", ShowStringCharacters -> False], -8., 
                    AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -62.50000000000012}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"-7.8\"", ShowStringCharacters -> False], -7.8,
                     AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -37.500000000000014`}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"-7.6\"", ShowStringCharacters -> False], -7.6,
                     AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -12.500000000000053`}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"-7.4\"", ShowStringCharacters -> False], -7.4,
                     AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 12.499999999999906`}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"-7.2\"", ShowStringCharacters -> False], -7.2,
                     AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 37.500000000000014`}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"-7.0\"", ShowStringCharacters -> False], -7., 
                    AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 62.49999999999997}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"-6.8\"", ShowStringCharacters -> False], -6.8,
                     AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 87.49999999999993}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}]}, {
                    Directive[
                    AbsoluteThickness[0.5], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]]}}, StripOnInput -> False]}, {}}, {{
                   Directive[
                    Opacity[1]]}}, StripOnInput -> False], {"GraphicsLabel"}, 
                StripOnInput -> False]}, {"GraphicsTicks"}, StripOnInput -> 
              False], {{
               Directive[
                AbsoluteThickness[0.5], 
                GrayLevel[0.4]]}}, StripOnInput -> False]}, {"GraphicsAxes"}, 
           StripOnInput -> False]}, PlotRangePadding -> Scaled[0.02], 
         PlotRange -> All, Frame -> True, 
         FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
         Opacity[0], FrameTicksStyle -> Opacity[0], 
         ImageSize -> {Automatic, 225}, BaseStyle -> {}], Alignment -> Left, 
        AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}}, 
        ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
       False], {FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
      False]}, "BarLegend", DisplayFunction -> (#& ), 
    InterpretationFunction :> (RowBox[{"BarLegend", "[", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{
               RowBox[{"Blend", "[", 
                 RowBox[{"\"Rainbow\"", ",", "#1"}], "]"}], "&"}], ",", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"-", "8.247`"}], ",", 
                 RowBox[{"-", "6.704999999999999`"}]}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"-", "8.2`"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"], ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
               "}"}], ",", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"-", "8.`"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"], ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
               "}"}], ",", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"-", "7.8`"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"], ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
               "}"}], ",", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"-", "7.6`"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"], ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
               "}"}], ",", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"-", "7.4`"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"], ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
               "}"}], ",", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"-", "7.2`"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"], ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
               "}"}], ",", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"-", "7.`"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"], ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
               "}"}], ",", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"-", "6.8`"}], ",", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"], ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
               "}"}]}], "}"}], ",", 
         RowBox[{"LabelStyle", "\[Rule]", 
           RowBox[{"{", "}"}]}], ",", 
         RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
         RowBox[{"LegendMarkerSize", "\[Rule]", "225"}], ",", 
         RowBox[{"ScalingFunctions", "\[Rule]", 
           RowBox[{"{", 
             RowBox[{"Identity", ",", "Identity"}], "}"}]}], ",", 
         RowBox[{"Charting`AxisLabel", "\[Rule]", "None"}], ",", 
         RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
         RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.9003173058181705`*^9, {3.9003173927576103`*^9, 3.900317415559149*^9}, 
   3.9003179374205246`*^9, 3.961040733790249*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"18057cff-89ab-244b-9209-15f5f7aac30b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"NotebookDirectory", "[", "]"}], 
    "<>", "\"\<contourplot.pdf\>\""}], ",", "g"}], "]"}]], "Input",
 CellChangeTimes->{{3.900317484860317*^9, 3.9003175129938383`*^9}, {
  3.900317734273595*^9, 3.9003177543418055`*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"1a5ffc38-2728-4300-997f-7ecda4986d9f"],

Cell[BoxData["\<\"C:\\\\Users\\\\jamel\\\\Dropbox\\\\Latex\\\\PROJECTS\\\\22-\
12-reer-tot-res-pm\\\\Archive\\\\contourplot.pdf\"\>"], "Output",
 CellChangeTimes->{{3.9003174962734137`*^9, 3.900317515707739*^9}, {
   3.9003177379751835`*^9, 3.90031775541678*^9}, {3.900317941055284*^9, 
   3.9003179510341597`*^9}, 3.9610407345088844`*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"7806a8a3-dead-6543-9c94-1ff8c4cc681d"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
x*(-.1610)-2.0514*(-1)+0.0449*x*(-1) ; x*(-.1610)-2.0514*(0)+0.0449*x*(0)\
\>", "WolframAlphaLong",
 CellChangeTimes->{{3.9001546030952787`*^9, 3.900154642394827*^9}, 
   3.9001782195268726`*^9},
 CellLabel->"In[7]:=",ExpressionUUID->"4ae2fba7-3cf7-4aa9-9b49-fea9574b44bd"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = 
   "x*(-.1610)-2.0514*(-1)+0.0449*x*(-1) ; \
x*(-.1610)-2.0514*(0)+0.0449*x*(0)", Typeset`opts$$ = {
   AppearanceElements -> {
     "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
      "Sources"}, Asynchronous -> All, 
    TimeConstraint -> {20, Automatic, Automatic, Automatic}, 
    Method -> {
     "Formats" -> {"cell", "minput", "msound", "dataformats"}, "Server" -> 
      "https://api.wolframalpha.com/v1/"}}, Typeset`elements$$ = {
   "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
    "Sources"}, Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Input interpretation", "scanner" -> "Identity", "id" -> 
     "Input", "position" -> "1", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "{x (-0.161) - 2.0514 (-1) + 0.0449 x (-1), x (-0.161) - 2.0514 0 + \
0.0449 x 0}"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             RowBox[{"{", 
               RowBox[{
                 RowBox[{
                   RowBox[{"x", 
                    StyleBox["\[Times]", 
                    GrayLevel[0.6]], 
                    RowBox[{"(", 
                    RowBox[{"-", "0.161`"}], ")"}]}], "-", 
                   RowBox[{"-", "2.0514000000000001123`5."}], "+", 
                   RowBox[{"0.0449`", " ", "x", 
                    StyleBox["\[Times]", 
                    GrayLevel[0.6]], 
                    RowBox[{"(", 
                    RowBox[{"-", "1"}], ")"}]}]}], ",", 
                 RowBox[{
                   RowBox[{"x", 
                    StyleBox["\[Times]", 
                    GrayLevel[0.6]], 
                    RowBox[{"(", 
                    RowBox[{"-", "0.161`"}], ")"}]}], "+", 
                   RowBox[{"0", 
                    StyleBox["\[Times]", 
                    GrayLevel[0.6]], 
                    RowBox[{"(", 
                    RowBox[{"-", "2.0514000000000001123`5."}], ")"}]}], "+", 
                   RowBox[{"0.0449`", " ", "x", 
                    StyleBox["\[Times]", 
                    GrayLevel[0.6]], "0"}]}]}], "}"}], 
             PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 11, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 11, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {
       XMLElement["expressiontype", {"name" -> "Default"}, {}]}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"title" -> "Result", "scanner" -> "Identity", "id" -> "Result", 
     "position" -> "2", "error" -> "false", "numsubpods" -> "1", "primary" -> 
     "true"}, {
     XMLElement["subpod", {"title" -> "", "primary" -> "true"}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             RowBox[{"{", 
               RowBox[{
                 RowBox[{
                   RowBox[{"2.0514`", "\[VeryThinSpace]"}], "-", 
                   RowBox[{"0.2059`", " ", "x"}]}], ",", 
                 RowBox[{"0", "-", 
                   RowBox[{"0.161`", " ", "x"}]}]}], "}"}], Identity], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 11, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 11, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,moutput,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {
       XMLElement["expressiontype", {"name" -> "Default"}, {}]}]}], 
   Typeset`pod3$$ = XMLElement[
   "pod", {"title" -> "Total", "scanner" -> "List", "id" -> "Total", 
     "position" -> "1020", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Total[{2.0514 - 0.2059 x, 0. - 0.161 x}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              TagBox[
               TagBox[
                RowBox[{
                  RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2.0514`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"0.2059`", " ", "x"}]}], ")"}], "+", 
                  RowBox[{"(", 
                    RowBox[{"0", "-", 
                    RowBox[{"0.161`", " ", "x"}]}], ")"}]}], HoldForm], 
               PolynomialForm[#, TraditionalOrder -> False]& ], 
              "\[LongEqual]", 
              TagBox[
               RowBox[{
                 RowBox[{"2.0514`", "\[VeryThinSpace]"}], "-", 
                 RowBox[{"0.3669`", " ", "x"}]}], Identity]}], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 11, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 11, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["expressiontypes", {"count" -> "1"}, {
       XMLElement["expressiontype", {"name" -> "Default"}, {}]}]}], 
   Typeset`pod4$$ = XMLElement[
   "pod", {"title" -> "Vector length", "scanner" -> "List", "id" -> 
     "VectorLength", "position" -> "1021", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Norm[{2.0514 - 0.2059 x, 0. - 0.161 x}]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             SqrtBox[
              RowBox[{
                SuperscriptBox[
                 TemplateBox[{
                   RowBox[{
                    RowBox[{"2.0514`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"0.2059`", " ", "x"}]}]}, "Abs"], "2"], "+", 
                RowBox[{"0.025921000000000003`", " ", 
                  SuperscriptBox[
                   TemplateBox[{"x"}, "Abs"], "2"]}]}]], Identity], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 11, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 11, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}], 
       XMLElement["infos", {"count" -> "1"}, {
         XMLElement["info", {"text" -> "abs(z) is the absolute value of z"}, {
           XMLElement[
           "link", {
            "url" -> "http://reference.wolfram.com/language/ref/Abs.html", 
             "text" -> "Documentation", "title" -> "Mathematica"}, {}], 
           XMLElement[
           "link", {
            "url" -> "http://functions.wolfram.com/ComplexComponents/Abs", 
             "text" -> "Properties", "title" -> 
             "Wolfram Functions Site"}, {}], 
           XMLElement[
           "link", {
            "url" -> "http://mathworld.wolfram.com/AbsoluteValue.html", 
             "text" -> "Definition", "title" -> "MathWorld"}, {}]}]}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {
       XMLElement["expressiontype", {"name" -> "Default"}, {}]}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Step-by-step solution", "input" -> 
         "VectorLength__Step-by-step solution", "stepbystep" -> "true", 
         "buttonstyle" -> "StepByStepSolution"}, {}]}]}], Typeset`pod5$$ = 
   XMLElement[
   "pod", {"title" -> "Plot", "scanner" -> "Plotter", "id" -> "Plot", 
     "position" -> "100.5", "error" -> "false", "numsubpods" -> "2"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Plot[{2.0514 - 0.2059 x, 0. - 0.161 x}, {x, -5., 15.}]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FormBox[
              StyleBox[
               
               DynamicModuleBox[{
                CalculateUtilities`GraphicsUtilities`Private`max8238$$ = 0.5, 
                 CalculateUtilities`GraphicsUtilities`Private`min8237$$ = \
-0.5, CalculateUtilities`GraphicsUtilities`Private`more$$ = False, 
                 Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
                 Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, 
                 Typeset`animvar$$ = 1, Typeset`name$$ = "\"untitled\"", 
                 Typeset`specs$$ = {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`more$$], {
                    False, True}}, {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`min8237$$], \
-0.5, "min"}, -1, 1}, {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`max8238$$], 
                    0.5, "max"}, -1, 1}, {
                    Hold[
                    Style[
                    Overlay[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "WABitmaps", "PodInfoBackground"]]], 
                    Pane[
                    Column[{
                    Grid[{{
                    Manipulate`Place[1], 
                    Manipulate`Place[2]}}]}], 
                    ImageMargins -> {{20, 30}, {10, 10}}]}, {1, 2}, 2, 
                    Alignment -> {Left, Top}]]], 
                    Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = 
                 Automatic, Typeset`update$$ = 0, Typeset`initDone$$ = False, 
                 Typeset`skipInitDone$$ = False}, 
                DynamicBox[
                 Manipulate`ManipulateBoxes[
                 2, TraditionalForm, 
                  "Variables" :> {
                   CalculateUtilities`GraphicsUtilities`Private`max8238$$ = 
                    0.5, CalculateUtilities`GraphicsUtilities`Private`min8237$\
$ = -0.5, CalculateUtilities`GraphicsUtilities`Private`more$$ = False}, 
                  "ControllerVariables" :> {}, 
                  "OtherVariables" :> {
                   Typeset`show$$, Typeset`bookmarkList$$, 
                    Typeset`bookmarkMode$$, Typeset`animator$$, 
                    Typeset`animvar$$, Typeset`name$$, Typeset`specs$$, 
                    Typeset`size$$, Typeset`update$$, Typeset`initDone$$, 
                    Typeset`skipInitDone$$}, "Body" :> Quiet[
                    Function[Null, 
                    CalculateUtilities`GraphicsUtilities`Private`post$5400729[
                    Plot[
                    SlotSequence[1], AspectRatio -> If[
                    TrueQ[
                    CalculateUtilities`GraphicsUtilities`Private`aspect], 
                    Automatic, 1/GoldenRatio]]], HoldAll][{
                    2.0514 - 0.2059 $CellContext`x, 0. - 
                    0.161 $CellContext`x}, {$CellContext`x, 
                    If[
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`min8237$$], 
                    (
                    Piecewise[{{
                    4.981544439048081 + 
                    10.650990027375371` Tan[1.5040801783846716` #], # < 0}}, 
                    4.981544439048081 + 
                    10.650990027375373` Tan[1.5040801783846716` #]]& )[
                    CalculateUtilities`GraphicsUtilities`Private`min8237$$], \
-4.981544439048082], 
                    If[
                    And[
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`min8237$$], 
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`max8238$$]], 
                    (
                    Piecewise[{{
                    4.981544439048081 + 
                    10.650990027375371` Tan[1.5040801783846716` #], # < 0}}, 
                    4.981544439048081 + 
                    10.650990027375373` Tan[1.5040801783846716` #]]& )[
                    If[
                    CalculateUtilities`GraphicsUtilities`Private`min8237$$ == 
                    CalculateUtilities`GraphicsUtilities`Private`max8238$$, 
                    CalculateUtilities`GraphicsUtilities`Private`min8237$$ + 
                    0.019926177756192327`, 
                    CalculateUtilities`GraphicsUtilities`Private`max8238$$]], 
                    14.944633317144245`]}, 
                    LabelStyle -> {FontFamily -> "Bitstream Charter"}, 
                    LabelStyle -> {}, Ticks -> Automatic, ImageSize -> 
                    Scaled[0.4], AxesLabel -> {
                    RawBoxes[
                    FormBox["x", TraditionalForm]], 
                    RawBoxes[
                    FormBox["y", TraditionalForm]]}, AxesLabel -> {
                    RawBoxes[
                    FormBox["x", TraditionalForm]], None}]], 
                  "Specifications" :> {{
                    CalculateUtilities`GraphicsUtilities`Private`more$$, {
                    False, True}, ControlType -> None}, {{
                    CalculateUtilities`GraphicsUtilities`Private`min8237$$, \
-0.5, "min"}, -1, 1, ImageSize -> Tiny, ControlPlacement -> 1}, {{
                    CalculateUtilities`GraphicsUtilities`Private`max8238$$, 
                    0.5, "max"}, -1, 1, ImageSize -> Tiny, ControlPlacement -> 
                    2}, 
                    Style[
                    Overlay[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "WABitmaps", "PodInfoBackground"]]], 
                    Pane[
                    Column[{
                    Grid[{{
                    Manipulate`Place[1], 
                    Manipulate`Place[2]}}]}], 
                    ImageMargins -> {{20, 30}, {10, 10}}]}, {1, 2}, 2, 
                    Alignment -> {Left, Top}]]}, 
                  "Options" :> {
                   ControlPlacement -> Bottom, 
                    FrameMargins -> {{0, 0}, {0, 10}}, Paneled -> False, 
                    AppearanceElements -> {}, 
                    LabelStyle -> {
                    "DialogStyle", FontColor -> GrayLevel[0.25]}}, 
                  "DefaultOptions" :> {}], SingleEvaluation -> True], 
                Initialization :> ({
                   ReleaseHold[
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`WACleanTicks[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Blank[]]] := 
                    Module[{
                    CalculateUtilities`GraphicsUtilities`Private`res, 
                    CalculateUtilities`GraphicsUtilities`Private`unitformat}, 
                    CalculateUtilities`GraphicsUtilities`Private`res = 
                    ReplaceAll[
                    ReplaceAll[
                    Part[
                    DeleteCases[
                    Replace[
                    ReplaceAll[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Alternatives[
                    Style, $CellContext`UnitNumberForm, NumberForm] -> (#& )],
                     Pattern[CalculateUtilities`GraphicsUtilities`Private`t, {
                    PatternTest[
                    BlankSequence[], NumberQ]}] :> 
                    Thread[{CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`t}]], {
                    Blank[], "", 
                    BlankNullSequence[]}], All, 
                    Span[1, 2]], Superscript[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`b, 
                    Blank[Integer]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`p, 
                    Blank[Integer]]] :> 
                    CalculateUtilities`GraphicsUtilities`Private`b^
                    CalculateUtilities`GraphicsUtilities`Private`p], Row[{
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    BlankSequence[]]}, "\[Times]"] :> 
                    Times[CalculateUtilities`GraphicsUtilities`Private`a]]; If[
                    MatchQ[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`res, All, 2], 
                    Condition[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`quants, {
                    Alternatives[
                    BlankSequence[$CellContext`ShortQuantity], 
                    BlankSequence[Quantity]]}], Length[
                    Union[
                    
                    Map[$CellContext`UnitObjectPart, 
                    CalculateUtilities`GraphicsUtilities`Private`quants]]] == 
                    1]], CalculateUtilities`GraphicsUtilities`Private`\
unitformat = $CellContext`ToCDFQuantityFunction[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`res, 1, 2]]; 
                    CalculateUtilities`GraphicsUtilities`Private`unitformat -> 
                    Thread[{
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`res, All, 1], 
                    $CellContext`QuantityPart[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`res, All, 2], 
                    $CellContext`UnitObjectPart[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`res, 1, 
                    2]]]}], 
                    CalculateUtilities`GraphicsUtilities`Private`res]]; 
                    Options[
                    CalculateUtilities`GraphicsUtilities`Private`post$5400729]\
 = {"ReturnInteractiveTypes" -> False, "Nearest" -> Automatic}; 
                    CalculateUtilities`GraphicsUtilities`Private`post$5400729[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`g, 
                    Blank[Graphics]], 
                    OptionsPattern[]] := Check[
                    
                    Module[{
                    CalculateUtilities`GraphicsUtilities`Private`lines, 
                    CalculateUtilities`GraphicsUtilities`Private`pts, 
                    CalculateUtilities`GraphicsUtilities`Private`gg, 
                    CalculateUtilities`GraphicsUtilities`Private`type, 
                    CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`r, 
                    CalculateUtilities`GraphicsUtilities`Private`oldepilog, 
                    CalculateUtilities`GraphicsUtilities`Private`range, 
                    CalculateUtilities`GraphicsUtilities`Private`gridlines, 
                    CalculateUtilities`GraphicsUtilities`Private`oldgridlines,
                     CalculateUtilities`GraphicsUtilities`Private`\
neareststyle = OptionValue["Nearest"]}, 
                    CalculateUtilities`GraphicsUtilities`Private`oldepilog = 
                    Replace[
                    ReplaceAll[Epilog, 
                    Options[CalculateUtilities`GraphicsUtilities`Private`g]], 
                    Epilog -> Sequence[]]; Switch[
                    ReplaceAll[{Frame, Axes}, 
                    Options[
                    CalculateUtilities`GraphicsUtilities`Private`g]], {True, 
                    Blank[]}, 
                    CalculateUtilities`GraphicsUtilities`Private`type = 
                    Frame; {CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`r} = 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, 
                    ReplaceAll[FrameTicks, 
                    Options[
                    CalculateUtilities`GraphicsUtilities`Private`g]]], {
                    Blank[], True}, 
                    CalculateUtilities`GraphicsUtilities`Private`type = 
                    Axes; {CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l} = 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Axes, 
                    ReplaceAll[Ticks, 
                    Options[CalculateUtilities`GraphicsUtilities`Private`g]]], 
                    Blank[], 
                    CalculateUtilities`GraphicsUtilities`Private`type = None]; 
                    If[
                    And[
                    CalculateUtilities`GraphicsUtilities`Private`type === 
                    Frame, 
                    Or[
                    Not[
                    Or[
                    CalculateUtilities`GraphicsUtilities`Private`t === None, 
                    CalculateUtilities`GraphicsUtilities`Private`b === 
                    CalculateUtilities`GraphicsUtilities`Private`t]], 
                    Not[
                    Or[
                    CalculateUtilities`GraphicsUtilities`Private`r === None, 
                    CalculateUtilities`GraphicsUtilities`Private`l === 
                    CalculateUtilities`GraphicsUtilities`Private`r]]]], 
                    CalculateUtilities`GraphicsUtilities`Private`type = None]; 
                    If[
                    TrueQ[
                    OptionValue["ReturnInteractiveTypes"]], 
                    Which[
                    Or[
                    CalculateUtilities`GraphicsUtilities`Private`type === 
                    None, CalculateUtilities`GraphicsUtilities`Private`b === 
                    None, CalculateUtilities`GraphicsUtilities`Private`l === 
                    None], {}, 
                    FreeQ[CalculateUtilities`GraphicsUtilities`Private`g, 
                    Alternatives[Line, Point]], {}, True, {
                    "Tooltips", "Coordinates"}], If[
                    FreeQ[CalculateUtilities`GraphicsUtilities`Private`g, 
                    Alternatives[Line, Point]], 
                    Return[CalculateUtilities`GraphicsUtilities`Private`g]]; 
                    CalculateUtilities`GraphicsUtilities`Private`gg = 
                    Normal[CalculateUtilities`GraphicsUtilities`Private`g]; 
                    CalculateUtilities`GraphicsUtilities`Private`pts = 
                    Partition[
                    Flatten[
                    Cases[
                    Part[CalculateUtilities`GraphicsUtilities`Private`gg, 1], 
                    Point[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Blank[]]] :> 
                    CalculateUtilities`GraphicsUtilities`Private`a, 
                    Infinity]], 2]; 
                    If[Length[
                    CalculateUtilities`GraphicsUtilities`Private`pts] < 2, 
                    CalculateUtilities`GraphicsUtilities`Private`lines = Cases[
                    Part[CalculateUtilities`GraphicsUtilities`Private`gg, 1], 
                    Blank[Line], Infinity]; 
                    If[CalculateUtilities`GraphicsUtilities`Private`lines === \
{}, 
                    Return[CalculateUtilities`GraphicsUtilities`Private`g]]; 
                    CalculateUtilities`GraphicsUtilities`Private`pts = Flatten[
                    Cases[
                    CalculateUtilities`GraphicsUtilities`Private`lines, Line[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Blank[]]] :> 
                    CalculateUtilities`GraphicsUtilities`Private`a, Infinity],
                     1]; If[
                    CalculateUtilities`GraphicsUtilities`Private`neareststyle === 
                    Automatic, If[
                    CalculateUtilities`GraphicsUtilities`Private`orderedLines[
                    CalculateUtilities`GraphicsUtilities`Private`lines], 
                    CalculateUtilities`GraphicsUtilities`Private`neareststyle = 
                    "1D", CalculateUtilities`GraphicsUtilities`Private`\
neareststyle = "2D"]; Null], 
                    If[
                    CalculateUtilities`GraphicsUtilities`Private`neareststyle === 
                    Automatic, 
                    CalculateUtilities`GraphicsUtilities`Private`neareststyle = 
                    "2D"]]; 
                    CalculateUtilities`GraphicsUtilities`Private`range = 
                    Replace[
                    ReplaceAll[PlotRange, 
                    Options[CalculateUtilities`GraphicsUtilities`Private`g]], 
                    Except[{{
                    PatternTest[
                    Blank[], NumberQ], 
                    PatternTest[
                    Blank[], NumberQ]}, {
                    PatternTest[
                    Blank[], NumberQ], 
                    PatternTest[
                    Blank[], NumberQ]}}] :> {
                    Through[
                    {Min, Max}[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 
                    1]]], 
                    Through[
                    {Min, Max}[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 
                    2]]]}]; CalculateUtilities`GraphicsUtilities`Private`b = 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[CalculateUtilities`GraphicsUtilities`Private`b, 
                    First[CalculateUtilities`GraphicsUtilities`Private`range], 
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 
                    1]]; CalculateUtilities`GraphicsUtilities`Private`l = 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[CalculateUtilities`GraphicsUtilities`Private`l, 
                    Last[CalculateUtilities`GraphicsUtilities`Private`range], 
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 
                    2]]; CalculateUtilities`GraphicsUtilities`Private`\
oldgridlines = ReplaceAll[GridLines, 
                    Options[CalculateUtilities`GraphicsUtilities`Private`g]]; 
                    CalculateUtilities`GraphicsUtilities`Private`gridlines = 
                    With[{CalculateUtilities`GraphicsUtilities`Private`gray = 
                    GrayLevel[0.7]}, 
                    Replace[
                    CalculateUtilities`GraphicsUtilities`Private`oldgridlines,\
 {Pattern[CalculateUtilities`GraphicsUtilities`Private`a, {
                    Blank[List], 
                    Blank[List]}] :> Dynamic[
                    Join[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Replace[
                    MousePosition[{"Graphics", Graphics}, None], {
                    None -> {{}, {}}, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`x, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`y, 
                    Blank[]]} :> {{{
                    CalculateUtilities`GraphicsUtilities`Private`x, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}, {{
                    CalculateUtilities`GraphicsUtilities`Private`y, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}}}], 
                    2]], {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Blank[List]], Automatic} :> 
                    With[{CalculateUtilities`GraphicsUtilities`Private`\
divisions = {CalculateUtilities`GraphicsUtilities`Private`a, 
                    FindDivisions[
                    Last[CalculateUtilities`GraphicsUtilities`Private`range], 
                    7]}}, 
                    Dynamic[
                    Join[
                    CalculateUtilities`GraphicsUtilities`Private`divisions, 
                    Replace[
                    MousePosition[{"Graphics", Graphics}, None], {
                    None -> {{}, {}}, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`x, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`y, 
                    Blank[]]} :> {{{
                    CalculateUtilities`GraphicsUtilities`Private`x, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}, {{
                    CalculateUtilities`GraphicsUtilities`Private`y, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}}}], 
                    2]]], Blank[] -> Dynamic[
                    
                    Map[{{#, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}& , 
                    MousePosition[{"Graphics", Graphics}, None]]]}]]; If[
                    Or[
                    CalculateUtilities`GraphicsUtilities`Private`type === 
                    None, CalculateUtilities`GraphicsUtilities`Private`b === 
                    None, CalculateUtilities`GraphicsUtilities`Private`l === 
                    None], 
                    Show[
                    CalculateUtilities`GraphicsUtilities`Private`g, GridLines -> 
                    CalculateUtilities`GraphicsUtilities`Private`gridlines, 
                    If[
                    MatchQ[
                    CalculateUtilities`GraphicsUtilities`Private`oldgridlines, 
                    Alternatives[None, GridLines]], 
                    Method -> {"GridLinesInFront" -> True}, 
                    Apply[Sequence, {}]]], 
                    
                    With[{CalculateUtilities`GraphicsUtilities`Private`nf = 
                    If[CalculateUtilities`GraphicsUtilities`Private`\
neareststyle === "1D", 
                    
                    With[{CalculateUtilities`GraphicsUtilities`Private`n = 
                    Nearest[Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 1] -> 
                    CalculateUtilities`GraphicsUtilities`Private`pts]}, 
                    CalculateUtilities`GraphicsUtilities`Private`n[
                    Part[#, 1]]& ], 
                    
                    With[{CalculateUtilities`GraphicsUtilities`Private`n = 
                    Nearest[Transpose[
                    Transpose[
                    CalculateUtilities`GraphicsUtilities`Private`pts]/Abs[
                    MapApply[
                    Subtract, 
                    CalculateUtilities`GraphicsUtilities`Private`range]]] -> 
                    CalculateUtilities`GraphicsUtilities`Private`pts], 
                    CalculateUtilities`GraphicsUtilities`Private`scale = Abs[
                    MapApply[
                    Subtract, 
                    CalculateUtilities`GraphicsUtilities`Private`range]]}, 
                    CalculateUtilities`GraphicsUtilities`Private`n[#/
                    CalculateUtilities`GraphicsUtilities`Private`scale]& ]], 
                    CalculateUtilities`GraphicsUtilities`Private`left = 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`bottom = 
                    CalculateUtilities`GraphicsUtilities`Private`b}, 
                    Show[
                    CalculateUtilities`GraphicsUtilities`Private`g, GridLines -> 
                    CalculateUtilities`GraphicsUtilities`Private`gridlines, 
                    If[
                    MatchQ[
                    CalculateUtilities`GraphicsUtilities`Private`oldgridlines, 
                    Alternatives[None, GridLines]], 
                    Method -> {"GridLinesInFront" -> True}, 
                    Apply[Sequence, {}]], 
                    Epilog -> {
                    CalculateUtilities`GraphicsUtilities`Private`oldepilog, 
                    Dynamic[
                    
                    DynamicModule[{
                    CalculateUtilities`GraphicsUtilities`Private`pt = 
                    CalculateUtilities`GraphicsUtilities`Private`nf[
                    MousePosition[{"Graphics", Graphics}, {0, 0}]], 
                    CalculateUtilities`GraphicsUtilities`Private`scaled = 
                    MousePosition[{"GraphicsScaled", Graphics}, None]}, 
                    If[
                    CalculateUtilities`GraphicsUtilities`Private`scaled === 
                    None, {}, {
                    Text[
                    Style[
                    Row[{
                    CalculateUtilities`GraphicsUtilities`Private`bottom[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pt, 1, 1]], 
                    CalculateUtilities`GraphicsUtilities`Private`left[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pt, 1, 2]]}, 
                    ","], 12], 
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pt, 1], {
                    1.5 Sign[Part[
                    CalculateUtilities`GraphicsUtilities`Private`scaled, 1] - 
                    0.5], 0}, Background -> White], 
                    AbsolutePointSize[7], 
                    Point[CalculateUtilities`GraphicsUtilities`Private`pt], 
                    White, 
                    AbsolutePointSize[5], 
                    Point[
                    CalculateUtilities`GraphicsUtilities`Private`pt]}]]]}]]]]]\
, CalculateUtilities`GraphicsUtilities`Private`g]; 
                    CalculateUtilities`GraphicsUtilities`Private`post$5400729[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`g, 
                    Blank[]], 
                    BlankNullSequence[]] := 
                    CalculateUtilities`GraphicsUtilities`Private`g; 
                    CalculateUtilities`GraphicsUtilities`Private`orderedLines[{
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`l, 
                    BlankSequence[Line]]}] := 
                    Module[{
                    CalculateUtilities`GraphicsUtilities`Private`ordered, 
                    CalculateUtilities`GraphicsUtilities`Private`intervals}, 
                    CalculateUtilities`GraphicsUtilities`Private`ordered = 
                    Apply[And, 
                    Map[OrderedQ[
                    Part[#, 1, All, 1]]& , 
                    Hold[CalculateUtilities`GraphicsUtilities`Private`l]]]; If[
                    Not[
                    TrueQ[
                    CalculateUtilities`GraphicsUtilities`Private`ordered]], 
                    Return[False]]; 
                    CalculateUtilities`GraphicsUtilities`Private`intervals = 
                    Part[{CalculateUtilities`GraphicsUtilities`Private`l}, 
                    All, 1, {1, -1}, 1]; Length[
                    Apply[
                    Interval, 
                    CalculateUtilities`GraphicsUtilities`Private`intervals]] === 
                    Length[CalculateUtilities`GraphicsUtilities`Private`\
intervals]]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, 
                    Alternatives[Automatic, FrameTicks]] = {
                    Identity, Identity, Identity, Identity}; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`b, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`l, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`t, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`r, 
                    Blank[]]}] := 
                    Map[CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction, {CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`r}]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, {{
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`l, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`r, 
                    Blank[]]}, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`b, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`t, 
                    Blank[]]}}] := 
                    Map[CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction, {CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`r}]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, 
                    Blank[]] = {None, None, None, None}; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Axes, 
                    Alternatives[Automatic, Ticks]] = {Identity, Identity}; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Axes, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`h, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`v, 
                    Blank[]]}] := 
                    Map[CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction, {CalculateUtilities`GraphicsUtilities`Private`h, 
                    CalculateUtilities`GraphicsUtilities`Private`v}]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Axes, 
                    Blank[]] = {None, None}; 
                    CalculateUtilities`GraphicsUtilities`Private`CDFCleanTicks[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Blank[]]] := ReplaceAll[
                    ReplaceAll[
                    Part[
                    DeleteCases[
                    ReplaceAll[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Alternatives[Style, NumberForm] -> (#& )], {
                    Blank[], "", 
                    BlankNullSequence[]}], All, 
                    Span[1, 2]], Superscript[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`b, 
                    Blank[Integer]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`p, 
                    Blank[Integer]]] :> 
                    CalculateUtilities`GraphicsUtilities`Private`b^
                    CalculateUtilities`GraphicsUtilities`Private`p], Row[{
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    BlankSequence[]]}, "\[Times]"] :> 
                    Times[CalculateUtilities`GraphicsUtilities`Private`a]]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks$, 
                    Blank[]]] := 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    CalculateUtilities`GraphicsUtilities`Private`WACleanTicks[
                    CalculateUtilities`GraphicsUtilities`Private`ticks$]]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[None] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[False] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[True] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[Automatic] = Identity; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[All] = Identity; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[Pattern[CalculateUtilities`GraphicsUtilities`Private`func, 
                    Blank[]] -> 
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Blank[]]] := Replace[
                    
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[CalculateUtilities`GraphicsUtilities`Private`ticks], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`f, 
                    Except[None]] :> 
                    Composition[
                    CalculateUtilities`GraphicsUtilities`Private`func, 
                    CalculateUtilities`GraphicsUtilities`Private`f]]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[{}] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, {
                    Repeated[{
                    Blank[Integer], 
                    Blank[String]}]}]] := Which[
                    Quiet[
                    MatchQ[
                    MapApply[SameQ, 
                    Map[Part[
                    DateList[#], 
                    Span[2, All]]& , 
                    CalculateUtilities`GraphicsUtilities`Private`ticks, {
                    2}]], {
                    Repeated[True]}]], DateString, 
                    Apply[And, 
                    StringMatchQ[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, All, 
                    2], NumberString]], 
                    
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    Transpose[{
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, All, 
                    1], 
                    ToExpression[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, All, 
                    2]]}]], True, None]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, {
                    Repeated[{
                    PatternTest[
                    Blank[], NumericQ], 
                    PatternTest[
                    Blank[], NumericQ]}]}]] := Which[
                    MatchQ[
                    MapApply[
                    Equal, CalculateUtilities`GraphicsUtilities`Private`ticks]\
, {
                    Repeated[True]}], Identity, 
                    MatchQ[
                    
                    MapApply[# == Log[#2]& , 
                    CalculateUtilities`GraphicsUtilities`Private`ticks], {
                    Repeated[True]}], Exp, 
                    TrueQ[
                    Quiet[
                    Apply[Equal, 
                    Apply[Divide, Transpose[
                    Rest[CalculateUtilities`GraphicsUtilities`Private`ticks]] - 
                    Part[CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    1]]]]], 
                    
                    With[{CalculateUtilities`GraphicsUtilities`Private`slope = 
                    Apply[Divide, 
                    Apply[Subtract, 
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, {-1, 
                    1}]]]}, 
                    SetPrecision[(# - Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 1, 
                    1])/CalculateUtilities`GraphicsUtilities`Private`slope + 
                    Part[CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    1, 2], 3]& ], True, None]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    Blank[]] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`type, 
                    Blank[]], 
                    BlankNullSequence[]] := 
                    CalculateUtilities`GraphicsUtilities`Private`type; 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[Identity, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`min, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`max, 
                    Blank[]]}, 
                    Blank[]] := 
                    With[{CalculateUtilities`GraphicsUtilities`Private`nf = 
                    CalculateUtilities`GraphicsUtilities`Private`numberForm, 
                    CalculateUtilities`GraphicsUtilities`Private`acc = 
                    Floor[Max[
                    Ceiling[
                    FullSimplify[Log[10, 
                    Max[
                    
                    Abs[{CalculateUtilities`GraphicsUtilities`Private`min, 
                    CalculateUtilities`GraphicsUtilities`Private`max}]]] - 
                    Log[10, (CalculateUtilities`GraphicsUtilities`Private`max - 
                    CalculateUtilities`GraphicsUtilities`Private`min)/100]]], 
                    3] - RealExponent[
                    Max[
                    
                    Abs[{CalculateUtilities`GraphicsUtilities`Private`min, 
                    CalculateUtilities`GraphicsUtilities`Private`max}]]]]}, 
                    CalculateUtilities`GraphicsUtilities`Private`nf[#, 
                    CalculateUtilities`GraphicsUtilities`Private`acc]& ]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[Exp, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`min, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`max, 
                    Blank[]]}, 
                    Blank[]] := 
                    With[{CalculateUtilities`GraphicsUtilities`Private`prec = 
                    Max[
                    Ceiling[
                    FullSimplify[Log[10, 
                    Max[
                    
                    Abs[{CalculateUtilities`GraphicsUtilities`Private`min, 
                    CalculateUtilities`GraphicsUtilities`Private`max}]]] - 
                    Log[10, (CalculateUtilities`GraphicsUtilities`Private`max - 
                    CalculateUtilities`GraphicsUtilities`Private`min)/100]]], 
                    3]}, Quiet[
                    RawBoxes[
                    ToBoxes[
                    NumberForm[
                    Exp[#], 
                    CalculateUtilities`GraphicsUtilities`Private`prec]]]]& ]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[DateString, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`min, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`max, 
                    Blank[]]}, 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`pts, 
                    Blank[]]] := 
                    Module[{
                    CalculateUtilities`GraphicsUtilities`Private`dates, 
                    CalculateUtilities`GraphicsUtilities`Private`spec}, 
                    CalculateUtilities`GraphicsUtilities`Private`dates = 
                    Map[DateList, 
                    CalculateUtilities`GraphicsUtilities`Private`pts]; 
                    CalculateUtilities`GraphicsUtilities`Private`spec = Switch[
                    Map[Length, 
                    Map[Union, 
                    Transpose[
                    CalculateUtilities`GraphicsUtilities`Private`dates]]], {
                    Blank[], 1, 1, 
                    BlankSequence[]}, {"Year"}, {
                    Blank[], 
                    Blank[], 1, 
                    BlankSequence[]}, {"MonthNameShort", " ", "Year"}, 
                    Blank[], {
                    "DayShort", " ", "MonthNameShort", " ", "Year"}]; 
                    If[(CalculateUtilities`GraphicsUtilities`Private`max - 
                    CalculateUtilities`GraphicsUtilities`Private`min)/
                    31536000 > 25, 
                    CalculateUtilities`GraphicsUtilities`Private`spec = {
                    "Year"}]; 
                    With[{CalculateUtilities`GraphicsUtilities`Private`s = 
                    CalculateUtilities`GraphicsUtilities`Private`spec}, 
                    DateString[#, 
                    CalculateUtilities`GraphicsUtilities`Private`s]& ]]; 
                    CalculateUtilities`GraphicsUtilities`Private`numberForm = 
                    Function[{
                    CalculateUtilities`GraphicsUtilities`Private`a, 
                    CalculateUtilities`GraphicsUtilities`Private`acc}, 
                    Quiet[
                    RawBoxes[
                    ToBoxes[
                    NumberForm[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Max[1, 
                    Ceiling[
                    RealExponent[
                    CalculateUtilities`GraphicsUtilities`Private`a] + 
                    CalculateUtilities`GraphicsUtilities`Private`acc]], 
                    ExponentFunction -> (Null& ), 
                    NumberFormat -> (StringReplace[#, StringExpression[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`s, 
                    BlankSequence[]], ".", EndOfString] -> 
                    CalculateUtilities`GraphicsUtilities`Private`s]& )]]]]]]], 
                   ReleaseHold[
                    Uncompress[
                    "6:eJztVm1v0zAQbikw3t/+\
ARKf0QZFfEJidGNMGlCS8r23xEksXDvYzjb48+Czm6RZu0oxHaAp/XCqL83ju+eeu97TYxEk/\
V6vp64b80GwONnC0xNjRmKWi4LH+2e5JEpRwZNr+OyOMSHRe4TBDxI7301j3gs5A+3Ob/\
B9YFHBQJOvmjKqKVHTAwl5RiNVe8aSnpifTJmIgNGf5Nmr4fb26+\
GOg8FYxqA1kVy9bAuZZxIUSXoIdMOYdwz4N3d8XB4/FYyF5HtBeETUQ+OdSIgNjODAMB/vW682U/\
cwMQ08BhlfOk1WnqO2FygtKU8nZJbjGxeTtdMWGGSqHDf3S27WKciFfwsfiNDG5Dw2aXu2BPqFccXo\
Oy+rf87dAM9v28JLcbqaOMxvlyFvoOkJUct0Pm9dJ8dI1bU2+jlXlzVfNhrkxVOm/l86okovh/\
GibRhkdmxqvFp7y/DDtvAix66fi/uBMZ+\
dowRcNRwqwX0UccHmUTRTHjiJtk9X5cbhMO5WfIfo9KlghROYOMt+\
sf3xqAKvN4UQazfdgHR4PQMCkhPjii23ezSlepSBhMgAz6/\
rl002EXUoHne2rz3lMTUDzBGybnlCc5gs1B10lH35o+\
JWcjnXZMj7IdckJXKt6G9jfaQhl8cT4RlJiBc09erNYZXUGKS37AclSJgDpwhJf5mP/\
eYeLlYCqTqQqC7pWBzY0pz5J9EvC3xEeKqz5o7tObq82xazCcRprbqAJsnitNkc0/\
0m040bmgPdlwTfkvgP9G5T6DaFv7opLO3B3ZrQrQndmtCtCd2a8P+uCTZi/Ff6DQmuuEY="]]}; 
                 Typeset`initDone$$ = True), DynamicModuleValues :> {}, 
                Deinitialization :> None, 
                UntrackedVariables :> {Typeset`size$$}, 
                SynchronousInitialization -> True, 
                UnsavedVariables :> {Typeset`initDone$$}, 
                UndoTrackedVariables :> {
                 Typeset`show$$, Typeset`bookmarkMode$$}], "Manipulate", 
               Deployed -> True, StripOnInput -> False], TraditionalForm], 
             Manipulate`InterpretManipulate[1]], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 11, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 11, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"minput"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Plot[{2.0514 - 0.2059 x, 0. - 0.161 x}, {x, 23., 69.}]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FormBox[
              StyleBox[
               
               DynamicModuleBox[{
                CalculateUtilities`GraphicsUtilities`Private`max13697$$ = 0.5,
                  CalculateUtilities`GraphicsUtilities`Private`min13696$$ = \
-0.5, CalculateUtilities`GraphicsUtilities`Private`more$$ = False, 
                 Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
                 Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, 
                 Typeset`animvar$$ = 1, Typeset`name$$ = "\"untitled\"", 
                 Typeset`specs$$ = {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`more$$], {
                    False, True}}, {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`min13696$$], \
-0.5, "min"}, -1, 1}, {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`max13697$$], 
                    0.5, "max"}, -1, 1}, {
                    Hold[
                    Style[
                    Overlay[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "WABitmaps", "PodInfoBackground"]]], 
                    Pane[
                    Column[{
                    Grid[{{
                    Manipulate`Place[1], 
                    Manipulate`Place[2]}}]}], 
                    ImageMargins -> {{20, 30}, {10, 10}}]}, {1, 2}, 2, 
                    Alignment -> {Left, Top}]]], 
                    Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = 
                 Automatic, Typeset`update$$ = 0, Typeset`initDone$$ = False, 
                 Typeset`skipInitDone$$ = False}, 
                DynamicBox[
                 Manipulate`ManipulateBoxes[
                 2, TraditionalForm, 
                  "Variables" :> {
                   CalculateUtilities`GraphicsUtilities`Private`max13697$$ = 
                    0.5, CalculateUtilities`GraphicsUtilities`Private`\
min13696$$ = -0.5, CalculateUtilities`GraphicsUtilities`Private`more$$ = 
                    False}, "ControllerVariables" :> {}, 
                  "OtherVariables" :> {
                   Typeset`show$$, Typeset`bookmarkList$$, 
                    Typeset`bookmarkMode$$, Typeset`animator$$, 
                    Typeset`animvar$$, Typeset`name$$, Typeset`specs$$, 
                    Typeset`size$$, Typeset`update$$, Typeset`initDone$$, 
                    Typeset`skipInitDone$$}, "Body" :> Quiet[
                    Function[Null, 
                    CalculateUtilities`GraphicsUtilities`Private`post$5811279[
                    Plot[
                    SlotSequence[1], AspectRatio -> If[
                    TrueQ[
                    CalculateUtilities`GraphicsUtilities`Private`aspect], 
                    Automatic, 1/GoldenRatio]]], HoldAll][{
                    2.0514 - 0.2059 $CellContext`x, 0. - 
                    0.161 $CellContext`x}, {$CellContext`x, 
                    If[
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`min13696$$], 
                    (
                    Piecewise[{{
                    45.68819599109132 + 
                    24.421368002634626` Tan[1.5040801783846716` #], # < 0}}, 
                    45.68819599109132 + 
                    24.42136800263462 Tan[1.5040801783846716` #]]& )[
                    CalculateUtilities`GraphicsUtilities`Private`min13696$$], 
                    22.84409799554566], 
                    If[
                    And[
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`min13696$$], 
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`max13697$$]], 
                    (
                    Piecewise[{{
                    45.68819599109132 + 
                    24.421368002634626` Tan[1.5040801783846716` #], # < 0}}, 
                    45.68819599109132 + 
                    24.42136800263462 Tan[1.5040801783846716` #]]& )[
                    If[
                    CalculateUtilities`GraphicsUtilities`Private`min13696$$ == 
                    CalculateUtilities`GraphicsUtilities`Private`max13697$$, 
                    CalculateUtilities`GraphicsUtilities`Private`min13696$$ + 
                    0.045688195991091314`, 
                    CalculateUtilities`GraphicsUtilities`Private`max13697$$]],
                     68.53229398663697]}, 
                    LabelStyle -> {FontFamily -> "Bitstream Charter"}, 
                    LabelStyle -> {}, Ticks -> Automatic, ImageSize -> 
                    Scaled[0.4], AxesLabel -> {
                    RawBoxes[
                    FormBox["x", TraditionalForm]], 
                    RawBoxes[
                    FormBox["y", TraditionalForm]]}, AxesLabel -> {
                    RawBoxes[
                    FormBox["x", TraditionalForm]], None}]], 
                  "Specifications" :> {{
                    CalculateUtilities`GraphicsUtilities`Private`more$$, {
                    False, True}, ControlType -> None}, {{
                    CalculateUtilities`GraphicsUtilities`Private`min13696$$, \
-0.5, "min"}, -1, 1, ImageSize -> Tiny, ControlPlacement -> 1}, {{
                    CalculateUtilities`GraphicsUtilities`Private`max13697$$, 
                    0.5, "max"}, -1, 1, ImageSize -> Tiny, ControlPlacement -> 
                    2}, 
                    Style[
                    Overlay[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "WABitmaps", "PodInfoBackground"]]], 
                    Pane[
                    Column[{
                    Grid[{{
                    Manipulate`Place[1], 
                    Manipulate`Place[2]}}]}], 
                    ImageMargins -> {{20, 30}, {10, 10}}]}, {1, 2}, 2, 
                    Alignment -> {Left, Top}]]}, 
                  "Options" :> {
                   ControlPlacement -> Bottom, 
                    FrameMargins -> {{0, 0}, {0, 10}}, Paneled -> False, 
                    AppearanceElements -> {}, 
                    LabelStyle -> {
                    "DialogStyle", FontColor -> GrayLevel[0.25]}}, 
                  "DefaultOptions" :> {}], SingleEvaluation -> True], 
                Initialization :> ({
                   ReleaseHold[
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`WACleanTicks[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Blank[]]] := 
                    Module[{
                    CalculateUtilities`GraphicsUtilities`Private`res, 
                    CalculateUtilities`GraphicsUtilities`Private`unitformat}, 
                    CalculateUtilities`GraphicsUtilities`Private`res = 
                    ReplaceAll[
                    ReplaceAll[
                    Part[
                    DeleteCases[
                    Replace[
                    ReplaceAll[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Alternatives[
                    Style, $CellContext`UnitNumberForm, NumberForm] -> (#& )],
                     Pattern[CalculateUtilities`GraphicsUtilities`Private`t, {
                    PatternTest[
                    BlankSequence[], NumberQ]}] :> 
                    Thread[{CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`t}]], {
                    Blank[], "", 
                    BlankNullSequence[]}], All, 
                    Span[1, 2]], Superscript[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`b, 
                    Blank[Integer]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`p, 
                    Blank[Integer]]] :> 
                    CalculateUtilities`GraphicsUtilities`Private`b^
                    CalculateUtilities`GraphicsUtilities`Private`p], Row[{
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    BlankSequence[]]}, "\[Times]"] :> 
                    Times[CalculateUtilities`GraphicsUtilities`Private`a]]; If[
                    MatchQ[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`res, All, 2], 
                    Condition[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`quants, {
                    Alternatives[
                    BlankSequence[$CellContext`ShortQuantity], 
                    BlankSequence[Quantity]]}], Length[
                    Union[
                    
                    Map[$CellContext`UnitObjectPart, 
                    CalculateUtilities`GraphicsUtilities`Private`quants]]] == 
                    1]], CalculateUtilities`GraphicsUtilities`Private`\
unitformat = $CellContext`ToCDFQuantityFunction[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`res, 1, 2]]; 
                    CalculateUtilities`GraphicsUtilities`Private`unitformat -> 
                    Thread[{
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`res, All, 1], 
                    $CellContext`QuantityPart[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`res, All, 2], 
                    $CellContext`UnitObjectPart[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`res, 1, 
                    2]]]}], 
                    CalculateUtilities`GraphicsUtilities`Private`res]]; 
                    Options[
                    CalculateUtilities`GraphicsUtilities`Private`post$5811279]\
 = {"ReturnInteractiveTypes" -> False, "Nearest" -> Automatic}; 
                    CalculateUtilities`GraphicsUtilities`Private`post$5811279[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`g, 
                    Blank[Graphics]], 
                    OptionsPattern[]] := Check[
                    
                    Module[{
                    CalculateUtilities`GraphicsUtilities`Private`lines, 
                    CalculateUtilities`GraphicsUtilities`Private`pts, 
                    CalculateUtilities`GraphicsUtilities`Private`gg, 
                    CalculateUtilities`GraphicsUtilities`Private`type, 
                    CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`r, 
                    CalculateUtilities`GraphicsUtilities`Private`oldepilog, 
                    CalculateUtilities`GraphicsUtilities`Private`range, 
                    CalculateUtilities`GraphicsUtilities`Private`gridlines, 
                    CalculateUtilities`GraphicsUtilities`Private`oldgridlines,
                     CalculateUtilities`GraphicsUtilities`Private`\
neareststyle = OptionValue["Nearest"]}, 
                    CalculateUtilities`GraphicsUtilities`Private`oldepilog = 
                    Replace[
                    ReplaceAll[Epilog, 
                    Options[CalculateUtilities`GraphicsUtilities`Private`g]], 
                    Epilog -> Sequence[]]; Switch[
                    ReplaceAll[{Frame, Axes}, 
                    Options[
                    CalculateUtilities`GraphicsUtilities`Private`g]], {True, 
                    Blank[]}, 
                    CalculateUtilities`GraphicsUtilities`Private`type = 
                    Frame; {CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`r} = 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, 
                    ReplaceAll[FrameTicks, 
                    Options[
                    CalculateUtilities`GraphicsUtilities`Private`g]]], {
                    Blank[], True}, 
                    CalculateUtilities`GraphicsUtilities`Private`type = 
                    Axes; {CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l} = 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Axes, 
                    ReplaceAll[Ticks, 
                    Options[CalculateUtilities`GraphicsUtilities`Private`g]]], 
                    Blank[], 
                    CalculateUtilities`GraphicsUtilities`Private`type = None]; 
                    If[
                    And[
                    CalculateUtilities`GraphicsUtilities`Private`type === 
                    Frame, 
                    Or[
                    Not[
                    Or[
                    CalculateUtilities`GraphicsUtilities`Private`t === None, 
                    CalculateUtilities`GraphicsUtilities`Private`b === 
                    CalculateUtilities`GraphicsUtilities`Private`t]], 
                    Not[
                    Or[
                    CalculateUtilities`GraphicsUtilities`Private`r === None, 
                    CalculateUtilities`GraphicsUtilities`Private`l === 
                    CalculateUtilities`GraphicsUtilities`Private`r]]]], 
                    CalculateUtilities`GraphicsUtilities`Private`type = None]; 
                    If[
                    TrueQ[
                    OptionValue["ReturnInteractiveTypes"]], 
                    Which[
                    Or[
                    CalculateUtilities`GraphicsUtilities`Private`type === 
                    None, CalculateUtilities`GraphicsUtilities`Private`b === 
                    None, CalculateUtilities`GraphicsUtilities`Private`l === 
                    None], {}, 
                    FreeQ[CalculateUtilities`GraphicsUtilities`Private`g, 
                    Alternatives[Line, Point]], {}, True, {
                    "Tooltips", "Coordinates"}], If[
                    FreeQ[CalculateUtilities`GraphicsUtilities`Private`g, 
                    Alternatives[Line, Point]], 
                    Return[CalculateUtilities`GraphicsUtilities`Private`g]]; 
                    CalculateUtilities`GraphicsUtilities`Private`gg = 
                    Normal[CalculateUtilities`GraphicsUtilities`Private`g]; 
                    CalculateUtilities`GraphicsUtilities`Private`pts = 
                    Partition[
                    Flatten[
                    Cases[
                    Part[CalculateUtilities`GraphicsUtilities`Private`gg, 1], 
                    Point[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Blank[]]] :> 
                    CalculateUtilities`GraphicsUtilities`Private`a, 
                    Infinity]], 2]; 
                    If[Length[
                    CalculateUtilities`GraphicsUtilities`Private`pts] < 2, 
                    CalculateUtilities`GraphicsUtilities`Private`lines = Cases[
                    Part[CalculateUtilities`GraphicsUtilities`Private`gg, 1], 
                    Blank[Line], Infinity]; 
                    If[CalculateUtilities`GraphicsUtilities`Private`lines === \
{}, 
                    Return[CalculateUtilities`GraphicsUtilities`Private`g]]; 
                    CalculateUtilities`GraphicsUtilities`Private`pts = Flatten[
                    Cases[
                    CalculateUtilities`GraphicsUtilities`Private`lines, Line[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Blank[]]] :> 
                    CalculateUtilities`GraphicsUtilities`Private`a, Infinity],
                     1]; If[
                    CalculateUtilities`GraphicsUtilities`Private`neareststyle === 
                    Automatic, If[
                    CalculateUtilities`GraphicsUtilities`Private`orderedLines[
                    CalculateUtilities`GraphicsUtilities`Private`lines], 
                    CalculateUtilities`GraphicsUtilities`Private`neareststyle = 
                    "1D", CalculateUtilities`GraphicsUtilities`Private`\
neareststyle = "2D"]; Null], 
                    If[
                    CalculateUtilities`GraphicsUtilities`Private`neareststyle === 
                    Automatic, 
                    CalculateUtilities`GraphicsUtilities`Private`neareststyle = 
                    "2D"]]; 
                    CalculateUtilities`GraphicsUtilities`Private`range = 
                    Replace[
                    ReplaceAll[PlotRange, 
                    Options[CalculateUtilities`GraphicsUtilities`Private`g]], 
                    Except[{{
                    PatternTest[
                    Blank[], NumberQ], 
                    PatternTest[
                    Blank[], NumberQ]}, {
                    PatternTest[
                    Blank[], NumberQ], 
                    PatternTest[
                    Blank[], NumberQ]}}] :> {
                    Through[
                    {Min, Max}[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 
                    1]]], 
                    Through[
                    {Min, Max}[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 
                    2]]]}]; CalculateUtilities`GraphicsUtilities`Private`b = 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[CalculateUtilities`GraphicsUtilities`Private`b, 
                    First[CalculateUtilities`GraphicsUtilities`Private`range], 
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 
                    1]]; CalculateUtilities`GraphicsUtilities`Private`l = 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[CalculateUtilities`GraphicsUtilities`Private`l, 
                    Last[CalculateUtilities`GraphicsUtilities`Private`range], 
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 
                    2]]; CalculateUtilities`GraphicsUtilities`Private`\
oldgridlines = ReplaceAll[GridLines, 
                    Options[CalculateUtilities`GraphicsUtilities`Private`g]]; 
                    CalculateUtilities`GraphicsUtilities`Private`gridlines = 
                    With[{CalculateUtilities`GraphicsUtilities`Private`gray = 
                    GrayLevel[0.7]}, 
                    Replace[
                    CalculateUtilities`GraphicsUtilities`Private`oldgridlines,\
 {Pattern[CalculateUtilities`GraphicsUtilities`Private`a, {
                    Blank[List], 
                    Blank[List]}] :> Dynamic[
                    Join[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Replace[
                    MousePosition[{"Graphics", Graphics}, None], {
                    None -> {{}, {}}, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`x, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`y, 
                    Blank[]]} :> {{{
                    CalculateUtilities`GraphicsUtilities`Private`x, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}, {{
                    CalculateUtilities`GraphicsUtilities`Private`y, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}}}], 
                    2]], {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Blank[List]], Automatic} :> 
                    With[{CalculateUtilities`GraphicsUtilities`Private`\
divisions = {CalculateUtilities`GraphicsUtilities`Private`a, 
                    FindDivisions[
                    Last[CalculateUtilities`GraphicsUtilities`Private`range], 
                    7]}}, 
                    Dynamic[
                    Join[
                    CalculateUtilities`GraphicsUtilities`Private`divisions, 
                    Replace[
                    MousePosition[{"Graphics", Graphics}, None], {
                    None -> {{}, {}}, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`x, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`y, 
                    Blank[]]} :> {{{
                    CalculateUtilities`GraphicsUtilities`Private`x, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}, {{
                    CalculateUtilities`GraphicsUtilities`Private`y, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}}}], 
                    2]]], Blank[] -> Dynamic[
                    
                    Map[{{#, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}& , 
                    MousePosition[{"Graphics", Graphics}, None]]]}]]; If[
                    Or[
                    CalculateUtilities`GraphicsUtilities`Private`type === 
                    None, CalculateUtilities`GraphicsUtilities`Private`b === 
                    None, CalculateUtilities`GraphicsUtilities`Private`l === 
                    None], 
                    Show[
                    CalculateUtilities`GraphicsUtilities`Private`g, GridLines -> 
                    CalculateUtilities`GraphicsUtilities`Private`gridlines, 
                    If[
                    MatchQ[
                    CalculateUtilities`GraphicsUtilities`Private`oldgridlines, 
                    Alternatives[None, GridLines]], 
                    Method -> {"GridLinesInFront" -> True}, 
                    Apply[Sequence, {}]]], 
                    
                    With[{CalculateUtilities`GraphicsUtilities`Private`nf = 
                    If[CalculateUtilities`GraphicsUtilities`Private`\
neareststyle === "1D", 
                    
                    With[{CalculateUtilities`GraphicsUtilities`Private`n = 
                    Nearest[Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 1] -> 
                    CalculateUtilities`GraphicsUtilities`Private`pts]}, 
                    CalculateUtilities`GraphicsUtilities`Private`n[
                    Part[#, 1]]& ], 
                    
                    With[{CalculateUtilities`GraphicsUtilities`Private`n = 
                    Nearest[Transpose[
                    Transpose[
                    CalculateUtilities`GraphicsUtilities`Private`pts]/Abs[
                    MapApply[
                    Subtract, 
                    CalculateUtilities`GraphicsUtilities`Private`range]]] -> 
                    CalculateUtilities`GraphicsUtilities`Private`pts], 
                    CalculateUtilities`GraphicsUtilities`Private`scale = Abs[
                    MapApply[
                    Subtract, 
                    CalculateUtilities`GraphicsUtilities`Private`range]]}, 
                    CalculateUtilities`GraphicsUtilities`Private`n[#/
                    CalculateUtilities`GraphicsUtilities`Private`scale]& ]], 
                    CalculateUtilities`GraphicsUtilities`Private`left = 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`bottom = 
                    CalculateUtilities`GraphicsUtilities`Private`b}, 
                    Show[
                    CalculateUtilities`GraphicsUtilities`Private`g, GridLines -> 
                    CalculateUtilities`GraphicsUtilities`Private`gridlines, 
                    If[
                    MatchQ[
                    CalculateUtilities`GraphicsUtilities`Private`oldgridlines, 
                    Alternatives[None, GridLines]], 
                    Method -> {"GridLinesInFront" -> True}, 
                    Apply[Sequence, {}]], 
                    Epilog -> {
                    CalculateUtilities`GraphicsUtilities`Private`oldepilog, 
                    Dynamic[
                    
                    DynamicModule[{
                    CalculateUtilities`GraphicsUtilities`Private`pt = 
                    CalculateUtilities`GraphicsUtilities`Private`nf[
                    MousePosition[{"Graphics", Graphics}, {0, 0}]], 
                    CalculateUtilities`GraphicsUtilities`Private`scaled = 
                    MousePosition[{"GraphicsScaled", Graphics}, None]}, 
                    If[
                    CalculateUtilities`GraphicsUtilities`Private`scaled === 
                    None, {}, {
                    Text[
                    Style[
                    Row[{
                    CalculateUtilities`GraphicsUtilities`Private`bottom[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pt, 1, 1]], 
                    CalculateUtilities`GraphicsUtilities`Private`left[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pt, 1, 2]]}, 
                    ","], 12], 
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pt, 1], {
                    1.5 Sign[Part[
                    CalculateUtilities`GraphicsUtilities`Private`scaled, 1] - 
                    0.5], 0}, Background -> White], 
                    AbsolutePointSize[7], 
                    Point[CalculateUtilities`GraphicsUtilities`Private`pt], 
                    White, 
                    AbsolutePointSize[5], 
                    Point[
                    CalculateUtilities`GraphicsUtilities`Private`pt]}]]]}]]]]]\
, CalculateUtilities`GraphicsUtilities`Private`g]; 
                    CalculateUtilities`GraphicsUtilities`Private`post$5811279[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`g, 
                    Blank[]], 
                    BlankNullSequence[]] := 
                    CalculateUtilities`GraphicsUtilities`Private`g; 
                    CalculateUtilities`GraphicsUtilities`Private`orderedLines[{
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`l, 
                    BlankSequence[Line]]}] := 
                    Module[{
                    CalculateUtilities`GraphicsUtilities`Private`ordered, 
                    CalculateUtilities`GraphicsUtilities`Private`intervals}, 
                    CalculateUtilities`GraphicsUtilities`Private`ordered = 
                    Apply[And, 
                    Map[OrderedQ[
                    Part[#, 1, All, 1]]& , 
                    Hold[CalculateUtilities`GraphicsUtilities`Private`l]]]; If[
                    Not[
                    TrueQ[
                    CalculateUtilities`GraphicsUtilities`Private`ordered]], 
                    Return[False]]; 
                    CalculateUtilities`GraphicsUtilities`Private`intervals = 
                    Part[{CalculateUtilities`GraphicsUtilities`Private`l}, 
                    All, 1, {1, -1}, 1]; Length[
                    Apply[
                    Interval, 
                    CalculateUtilities`GraphicsUtilities`Private`intervals]] === 
                    Length[CalculateUtilities`GraphicsUtilities`Private`\
intervals]]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, 
                    Alternatives[Automatic, FrameTicks]] = {
                    Identity, Identity, Identity, Identity}; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`b, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`l, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`t, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`r, 
                    Blank[]]}] := 
                    Map[CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction, {CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`r}]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, {{
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`l, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`r, 
                    Blank[]]}, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`b, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`t, 
                    Blank[]]}}] := 
                    Map[CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction, {CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`r}]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, 
                    Blank[]] = {None, None, None, None}; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Axes, 
                    Alternatives[Automatic, Ticks]] = {Identity, Identity}; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Axes, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`h, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`v, 
                    Blank[]]}] := 
                    Map[CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction, {CalculateUtilities`GraphicsUtilities`Private`h, 
                    CalculateUtilities`GraphicsUtilities`Private`v}]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Axes, 
                    Blank[]] = {None, None}; 
                    CalculateUtilities`GraphicsUtilities`Private`CDFCleanTicks[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Blank[]]] := ReplaceAll[
                    ReplaceAll[
                    Part[
                    DeleteCases[
                    ReplaceAll[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Alternatives[Style, NumberForm] -> (#& )], {
                    Blank[], "", 
                    BlankNullSequence[]}], All, 
                    Span[1, 2]], Superscript[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`b, 
                    Blank[Integer]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`p, 
                    Blank[Integer]]] :> 
                    CalculateUtilities`GraphicsUtilities`Private`b^
                    CalculateUtilities`GraphicsUtilities`Private`p], Row[{
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    BlankSequence[]]}, "\[Times]"] :> 
                    Times[CalculateUtilities`GraphicsUtilities`Private`a]]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks$, 
                    Blank[]]] := 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    CalculateUtilities`GraphicsUtilities`Private`WACleanTicks[
                    CalculateUtilities`GraphicsUtilities`Private`ticks$]]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[None] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[False] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[True] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[Automatic] = Identity; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[All] = Identity; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[Pattern[CalculateUtilities`GraphicsUtilities`Private`func, 
                    Blank[]] -> 
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Blank[]]] := Replace[
                    
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[CalculateUtilities`GraphicsUtilities`Private`ticks], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`f, 
                    Except[None]] :> 
                    Composition[
                    CalculateUtilities`GraphicsUtilities`Private`func, 
                    CalculateUtilities`GraphicsUtilities`Private`f]]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[{}] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, {
                    Repeated[{
                    Blank[Integer], 
                    Blank[String]}]}]] := Which[
                    Quiet[
                    MatchQ[
                    MapApply[SameQ, 
                    Map[Part[
                    DateList[#], 
                    Span[2, All]]& , 
                    CalculateUtilities`GraphicsUtilities`Private`ticks, {
                    2}]], {
                    Repeated[True]}]], DateString, 
                    Apply[And, 
                    StringMatchQ[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, All, 
                    2], NumberString]], 
                    
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    Transpose[{
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, All, 
                    1], 
                    ToExpression[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, All, 
                    2]]}]], True, None]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, {
                    Repeated[{
                    PatternTest[
                    Blank[], NumericQ], 
                    PatternTest[
                    Blank[], NumericQ]}]}]] := Which[
                    MatchQ[
                    MapApply[
                    Equal, CalculateUtilities`GraphicsUtilities`Private`ticks]\
, {
                    Repeated[True]}], Identity, 
                    MatchQ[
                    
                    MapApply[# == Log[#2]& , 
                    CalculateUtilities`GraphicsUtilities`Private`ticks], {
                    Repeated[True]}], Exp, 
                    TrueQ[
                    Quiet[
                    Apply[Equal, 
                    Apply[Divide, Transpose[
                    Rest[CalculateUtilities`GraphicsUtilities`Private`ticks]] - 
                    Part[CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    1]]]]], 
                    
                    With[{CalculateUtilities`GraphicsUtilities`Private`slope = 
                    Apply[Divide, 
                    Apply[Subtract, 
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, {-1, 
                    1}]]]}, 
                    SetPrecision[(# - Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 1, 
                    1])/CalculateUtilities`GraphicsUtilities`Private`slope + 
                    Part[CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    1, 2], 3]& ], True, None]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    Blank[]] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`type, 
                    Blank[]], 
                    BlankNullSequence[]] := 
                    CalculateUtilities`GraphicsUtilities`Private`type; 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[Identity, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`min, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`max, 
                    Blank[]]}, 
                    Blank[]] := 
                    With[{CalculateUtilities`GraphicsUtilities`Private`nf = 
                    CalculateUtilities`GraphicsUtilities`Private`numberForm, 
                    CalculateUtilities`GraphicsUtilities`Private`acc = 
                    Floor[Max[
                    Ceiling[
                    FullSimplify[Log[10, 
                    Max[
                    
                    Abs[{CalculateUtilities`GraphicsUtilities`Private`min, 
                    CalculateUtilities`GraphicsUtilities`Private`max}]]] - 
                    Log[10, (CalculateUtilities`GraphicsUtilities`Private`max - 
                    CalculateUtilities`GraphicsUtilities`Private`min)/100]]], 
                    3] - RealExponent[
                    Max[
                    
                    Abs[{CalculateUtilities`GraphicsUtilities`Private`min, 
                    CalculateUtilities`GraphicsUtilities`Private`max}]]]]}, 
                    CalculateUtilities`GraphicsUtilities`Private`nf[#, 
                    CalculateUtilities`GraphicsUtilities`Private`acc]& ]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[Exp, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`min, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`max, 
                    Blank[]]}, 
                    Blank[]] := 
                    With[{CalculateUtilities`GraphicsUtilities`Private`prec = 
                    Max[
                    Ceiling[
                    FullSimplify[Log[10, 
                    Max[
                    
                    Abs[{CalculateUtilities`GraphicsUtilities`Private`min, 
                    CalculateUtilities`GraphicsUtilities`Private`max}]]] - 
                    Log[10, (CalculateUtilities`GraphicsUtilities`Private`max - 
                    CalculateUtilities`GraphicsUtilities`Private`min)/100]]], 
                    3]}, Quiet[
                    RawBoxes[
                    ToBoxes[
                    NumberForm[
                    Exp[#], 
                    CalculateUtilities`GraphicsUtilities`Private`prec]]]]& ]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[DateString, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`min, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`max, 
                    Blank[]]}, 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`pts, 
                    Blank[]]] := 
                    Module[{
                    CalculateUtilities`GraphicsUtilities`Private`dates, 
                    CalculateUtilities`GraphicsUtilities`Private`spec}, 
                    CalculateUtilities`GraphicsUtilities`Private`dates = 
                    Map[DateList, 
                    CalculateUtilities`GraphicsUtilities`Private`pts]; 
                    CalculateUtilities`GraphicsUtilities`Private`spec = Switch[
                    Map[Length, 
                    Map[Union, 
                    Transpose[
                    CalculateUtilities`GraphicsUtilities`Private`dates]]], {
                    Blank[], 1, 1, 
                    BlankSequence[]}, {"Year"}, {
                    Blank[], 
                    Blank[], 1, 
                    BlankSequence[]}, {"MonthNameShort", " ", "Year"}, 
                    Blank[], {
                    "DayShort", " ", "MonthNameShort", " ", "Year"}]; 
                    If[(CalculateUtilities`GraphicsUtilities`Private`max - 
                    CalculateUtilities`GraphicsUtilities`Private`min)/
                    31536000 > 25, 
                    CalculateUtilities`GraphicsUtilities`Private`spec = {
                    "Year"}]; 
                    With[{CalculateUtilities`GraphicsUtilities`Private`s = 
                    CalculateUtilities`GraphicsUtilities`Private`spec}, 
                    DateString[#, 
                    CalculateUtilities`GraphicsUtilities`Private`s]& ]]; 
                    CalculateUtilities`GraphicsUtilities`Private`numberForm = 
                    Function[{
                    CalculateUtilities`GraphicsUtilities`Private`a, 
                    CalculateUtilities`GraphicsUtilities`Private`acc}, 
                    Quiet[
                    RawBoxes[
                    ToBoxes[
                    NumberForm[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Max[1, 
                    Ceiling[
                    RealExponent[
                    CalculateUtilities`GraphicsUtilities`Private`a] + 
                    CalculateUtilities`GraphicsUtilities`Private`acc]], 
                    ExponentFunction -> (Null& ), 
                    NumberFormat -> (StringReplace[#, StringExpression[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`s, 
                    BlankSequence[]], ".", EndOfString] -> 
                    CalculateUtilities`GraphicsUtilities`Private`s]& )]]]]]]], 
                   ReleaseHold[
                    Uncompress[
                    "6:eJztVm1v0zAQbinv7/\
APkPiM1AESfEACOhiTBpSkfK8XXxoL1w62sw3+PPjsJmnWrlJMB2hKP5zqS/\
P47rnnrvfoUEZpv9fr6cvWfJCcptfw9NCakZznshD03UmuQGsmRXoJn920JgazC5z8AOp9V615L9Wc\
GH9+he8TnhScGPhqGGeGgZ7uKZJnLNG1Z6zYkf3JlMuEcPYTHj9/\
MRzuvBx6GIxlTIwBJfTTtpB5poiGtIdAV6x5y4n45o8PyuOngvMYvhcgEtD3rHeiCLUwUhCO+\
QTferGZuo2JGSIoUfTcaXLyHLW9QBvFxGwC8xzfOJusYVtgombac3On5GaTgnz41/\
GBjF1M3uOSdmdHYFgYF4y+07L659wN8Py6LbySx+uJw/zecOSNGHYEepXOJ63r5BmputZFv+\
DqvObLVoM8e8rU/0sHTJvVMHbahgHzQ1vj9dpbhX/WFl7m2PULcd+15rN3lIDrhkMluI+\
SFnwRRTPlgZdo+3R1bh0e41bFd4zOkApWOJGNs+wX1x/3K/\
B6U4ixdtMtSEfUMyCCHKyLOm532YyZUUYUSSzw4rp+2WQTWYcScGf72jNBmR1gnpBNyxOa/\
XSp7sQk2Zc/Km4ll1NNhrzvCwMzUBtFfwProyy5gk5kYCQxXtDUazCHVVJjooJlPyhB4pwIhpDsl/\
24b/7hciWQqj2F6lKexYErzUl4Ev2ywAcgZiZr7tiBoyu4bTGbSB7XqotYmi5Pm+\
0x3W8y3bihOdBDSQgtSfhA7zaFblP4q5vCyh7crQndmtCtCd2a0K0J/++a4CLGf6Xf5Q64dg=="]]}\
; Typeset`initDone$$ = True), DynamicModuleValues :> {}, Deinitialization :> 
                None, UntrackedVariables :> {Typeset`size$$}, 
                SynchronousInitialization -> True, 
                UnsavedVariables :> {Typeset`initDone$$}, 
                UndoTrackedVariables :> {
                 Typeset`show$$, Typeset`bookmarkMode$$}], "Manipulate", 
               Deployed -> True, StripOnInput -> False], TraditionalForm], 
             Manipulate`InterpretManipulate[1]], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 11, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 11, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"minput"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {
       XMLElement["expressiontype", {"name" -> "Default"}, {}]}]}], 
   Typeset`pod6$$ = XMLElement[
   "pod", {"title" -> "Parametric plot", "scanner" -> "Plot", "id" -> 
     "ParametricPlot", "position" -> "201.1", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "ParametricPlot[{2.0514 - 0.2059 x, 0. - 0.161 x}, {x, -14.9446, \
14.9446}]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FormBox[
              StyleBox[
               
               DynamicModuleBox[{
                CalculateUtilities`GraphicsUtilities`Private`more$$ = False, 
                 CalculateUtilities`GraphicsUtilities`Private`n$$ = 77, 
                 Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
                 Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, 
                 Typeset`animvar$$ = 1, Typeset`name$$ = "\"untitled\"", 
                 Typeset`specs$$ = {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`more$$], {
                    False, True}}, {{
                    Hold[CalculateUtilities`GraphicsUtilities`Private`n$$], 
                    77, 
                    RawBoxes[
                    FormBox["x", TraditionalForm]]}, 1, 77, 1}, {
                    Hold[
                    Style[
                    Overlay[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "WABitmaps", "PodInfoBackground"]]], 
                    Pane[
                    Column[{
                    Manipulate`Place[1]}], 
                    ImageMargins -> {{20, 30}, {10, 10}}]}, {1, 2}, 2, 
                    Alignment -> {Left, Top}]]], 
                    Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = 
                 Automatic, Typeset`update$$ = 0, Typeset`initDone$$ = False, 
                 Typeset`skipInitDone$$ = False}, 
                DynamicBox[
                 Manipulate`ManipulateBoxes[
                 2, TraditionalForm, 
                  "Variables" :> {
                   CalculateUtilities`GraphicsUtilities`Private`more$$ = 
                    False, CalculateUtilities`GraphicsUtilities`Private`n$$ = 
                    77}, "ControllerVariables" :> {}, 
                  "OtherVariables" :> {
                   Typeset`show$$, Typeset`bookmarkList$$, 
                    Typeset`bookmarkMode$$, Typeset`animator$$, 
                    Typeset`animvar$$, Typeset`name$$, Typeset`specs$$, 
                    Typeset`size$$, Typeset`update$$, Typeset`initDone$$, 
                    Typeset`skipInitDone$$}, "Body" :> Quiet[
                    (Labeled[
                    (Graphics[{{{{}, {}, 
                    Annotation[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.5]], {
                    If[# < 77, Arrow, Line][
                    Part[CompressedData["
1:eJwB4QQe+yFib1JlAgAAAE0AAAACAAAA3iQGgZWDFEC+Bnj/qT8DQGDsh7am
gRRAXoUNNqQ8A0Diswnst38UQP4Do2yeOQNA50INV9p7FEA/Ac7ZkjMDQPBg
FC0fdBRAwPsjtHsnA0ADnSLZqGQUQMPwz2hNDwNAKRU/MbxFFEDJ2ifS8N4C
QHUFeOHiBxRA1a7XpDd+AkAd4OWhyIETQNqCw7x/rAFAftg4ZJEEE0DBIy6j
regAQGCNePLOiRJAjgYc5LIoAEBQPLTgpAQSQJEqLC/lsP4//AjV0F2IEUDK
4R0zMCz9P7bP8SCvARFA3/AnHPCG+z/yUvs8dX0QQL+DOLpe6fk/5vPpWh4C
EEBjsEb1mGf4P9YdqbG/+A5A4jRtFUjF9j9Sj0ixCP8NQCZTkdLCPvU/z3nB
SDsKDUA09btE7L/zP2xYMqCeAAxAHu/+m4og8j97cm37xwgLQMyCP5D0nPA/
qoCgFiL8CUCr3DDTpvHtP9sHrcll9AhAVLvv78G46j9+yoOAb/4HQIbNqUZ0
t+c/QYFS96nzBkBuj5RnEHXkP3Zz63Gq+gVA34R6wkNq4T/LWXys2+wEQAlU
Is/BPNw/IrnmfvbjA0CErWnttsPVP+tTG1XX7AJAINxO/7Rzzz/T4kfr6OAB
QBAcjUyjW8I/L60+hcDmAECDqOAGuoeoPxfhHW4D4/8/wKWig0Jpp78QUK5R
5879Pyq+xpro2sK/7jXTPFfe+z/BBLisI/3OvwwE6KcoxPk/QEbzytsR1r8s
xK9CzbP3P/J6cOtqhty/MvsL5f3G9T9JpPvL5UXhv3caWAeQsPM/Y1sOWKyJ
5L+gsDgxrr3xP/beJarblee/nHGYFT+p7z/xWjCSrZLqv3RSn8jkg+s/NScK
sJXQ7b8YIc+KoqXnP/lf9Elza/C/OsDeTCN04z98VMvWJg/yv0yaLjx4E98/
O6+kxg6X878wfGud9mXXPy6GdwFIF/W/KP7P/PUjzj9GBTJXDLj2vyB22fa9
ML0/m+ruDwU9+L+AMLozYAGSvxR4k+OI4vm/ELfDih3Kwr/CgTECXoD7v3g4
NmnXG9G/q/HRg2cC/b9g9EoNGnnZv7kJWiD8pP6/YOqGSRak4L8CRPKP4hUA
wIR2Ai35d+S/QUE0tW/VAMAwMp4QGZ/ov5MS6mdCpQHADAAR5SB/7L8CFyFM
L2cCwPR8toRukOy/wXLuNpFqAsDk+VskvKHsv4DOuyHzbQLAvPOmY1fE7L/+
hVb3tnQCwGznPOKNCe2/+vSLoj6CAsDIzmjf+pPtv/HS9vhNnQLAhJ3A2dSo
7r/gjsylbNMCwHAaZnkiuu6/n+qZkM7WAsBclwsZcMvuv15GZ3sw2gLANJFW
WAvu7r/c/QFR9OACwOCE7NZBM++/12w3/HvuAsBAbBjUrr3vv89KolKLCQPA
KOm9c/zO77+Npm897QwDwBhmYxNK4O+/TQI9KE8QA8D4L1epcgHwv8u51/0S
FwPA0Cmi6A0k8L/GKA2pmiQDwEbodLi0LPC/hoTak/wnA8C6pkeIWzXwv0Tg
p35eKwPApiPtJ6lG8L/Cl0JUIjIDwBziv/dPT/C/gfMPP4Q1A8CSoJLH9lfw
v0BP3SnmOAPABl9ll51g8L/+qqoUSDwDwH4dOGdEafC/vgZ4/6k/A8CS23k6

                    "], 
                    Span[1, 
                    Clip[#, {0, 77}]]]], {
                    Opacity[0.3], 
                    Line[CompressedData["
1:eJwB4QQe+yFib1JlAgAAAE0AAAACAAAA3iQGgZWDFEC+Bnj/qT8DQGDsh7am
gRRAXoUNNqQ8A0Diswnst38UQP4Do2yeOQNA50INV9p7FEA/Ac7ZkjMDQPBg
FC0fdBRAwPsjtHsnA0ADnSLZqGQUQMPwz2hNDwNAKRU/MbxFFEDJ2ifS8N4C
QHUFeOHiBxRA1a7XpDd+AkAd4OWhyIETQNqCw7x/rAFAftg4ZJEEE0DBIy6j
regAQGCNePLOiRJAjgYc5LIoAEBQPLTgpAQSQJEqLC/lsP4//AjV0F2IEUDK
4R0zMCz9P7bP8SCvARFA3/AnHPCG+z/yUvs8dX0QQL+DOLpe6fk/5vPpWh4C
EEBjsEb1mGf4P9YdqbG/+A5A4jRtFUjF9j9Sj0ixCP8NQCZTkdLCPvU/z3nB
SDsKDUA09btE7L/zP2xYMqCeAAxAHu/+m4og8j97cm37xwgLQMyCP5D0nPA/
qoCgFiL8CUCr3DDTpvHtP9sHrcll9AhAVLvv78G46j9+yoOAb/4HQIbNqUZ0
t+c/QYFS96nzBkBuj5RnEHXkP3Zz63Gq+gVA34R6wkNq4T/LWXys2+wEQAlU
Is/BPNw/IrnmfvbjA0CErWnttsPVP+tTG1XX7AJAINxO/7Rzzz/T4kfr6OAB
QBAcjUyjW8I/L60+hcDmAECDqOAGuoeoPxfhHW4D4/8/wKWig0Jpp78QUK5R
5879Pyq+xpro2sK/7jXTPFfe+z/BBLisI/3OvwwE6KcoxPk/QEbzytsR1r8s
xK9CzbP3P/J6cOtqhty/MvsL5f3G9T9JpPvL5UXhv3caWAeQsPM/Y1sOWKyJ
5L+gsDgxrr3xP/beJarblee/nHGYFT+p7z/xWjCSrZLqv3RSn8jkg+s/NScK
sJXQ7b8YIc+KoqXnP/lf9Elza/C/OsDeTCN04z98VMvWJg/yv0yaLjx4E98/
O6+kxg6X878wfGud9mXXPy6GdwFIF/W/KP7P/PUjzj9GBTJXDLj2vyB22fa9
ML0/m+ruDwU9+L+AMLozYAGSvxR4k+OI4vm/ELfDih3Kwr/CgTECXoD7v3g4
NmnXG9G/q/HRg2cC/b9g9EoNGnnZv7kJWiD8pP6/YOqGSRak4L8CRPKP4hUA
wIR2Ai35d+S/QUE0tW/VAMAwMp4QGZ/ov5MS6mdCpQHADAAR5SB/7L8CFyFM
L2cCwPR8toRukOy/wXLuNpFqAsDk+VskvKHsv4DOuyHzbQLAvPOmY1fE7L/+
hVb3tnQCwGznPOKNCe2/+vSLoj6CAsDIzmjf+pPtv/HS9vhNnQLAhJ3A2dSo
7r/gjsylbNMCwHAaZnkiuu6/n+qZkM7WAsBclwsZcMvuv15GZ3sw2gLANJFW
WAvu7r/c/QFR9OACwOCE7NZBM++/12w3/HvuAsBAbBjUrr3vv89KolKLCQPA
KOm9c/zO77+Npm897QwDwBhmYxNK4O+/TQI9KE8QA8D4L1epcgHwv8u51/0S
FwPA0Cmi6A0k8L/GKA2pmiQDwEbodLi0LPC/hoTak/wnA8C6pkeIWzXwv0Tg
p35eKwPApiPtJ6lG8L/Cl0JUIjIDwBziv/dPT/C/gfMPP4Q1A8CSoJLH9lfw
v0BP3SnmOAPABl9ll51g8L/+qqoUSDwDwH4dOGdEafC/vgZ4/6k/A8CS23k6

                    "]]}}}, "Charting`Private`Tag$3448445#1"]}}, {}}, {
                    GridLines -> Dynamic[
                    Map[{{#, 
                    GrayLevel[0.7]}}& , 
                    MousePosition[{"Graphics", Graphics}, None]]], 
                    Method -> {"GridLinesInFront" -> True}, DisplayFunction -> 
                    Identity, PlotRangePadding -> {{
                    Scaled[0.05], 
                    Scaled[0.05]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, Axes -> {True, True}, 
                    AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
                    AxesStyle -> Directive[
                    GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                    FontOpacity -> 1], BaseStyle -> Automatic, 
                    DisplayFunction :> Identity, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    AbsoluteThickness[0.2]], 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLinesStyle -> Automatic, 
                    ImageSize -> 220., 
                    Method -> {
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "ScalingFunctions" -> None}, 
                    PlotRange -> {{-1.0257, 
                    5.128500000000001}, {-2.4060859640602237`, 
                    2.4060859640602237`}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {
                    Scaled[0.02], 
                    Scaled[0.02]}, Ticks -> {Automatic, Automatic}, 
                    TicksStyle -> {}}]& )[#], 
                    RawBoxes[
                    FormBox[
                    StyleBox[
                    TagBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    RowBox[{"x", "\[InvisibleSpace]", 
                    TemplateBox[{4}, "Spacer1"], "\[InvisibleSpace]", 
                    "\"from \"", "\[InvisibleSpace]", 
                    RowBox[{"-", 
                    TagBox["14.94", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "14.94", "SRString" -> "14.94"]]}], 
                    "\[InvisibleSpace]", "\" to \"", "\[InvisibleSpace]", 
                    TagBox["14.94", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "14.94", "SRString" -> "14.94"]]}], 
                    "\[NoBreak]", "\")\""}], Row], {
                    FontSize -> 11, FontFamily -> "Roboto", 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], TraditionalForm]], {{Right, Center}}]& )[
                    CalculateUtilities`GraphicsUtilities`Private`n$$]], 
                  "Specifications" :> {{
                    CalculateUtilities`GraphicsUtilities`Private`more$$, {
                    False, True}, ControlType -> None}, {{
                    CalculateUtilities`GraphicsUtilities`Private`n$$, 77, 
                    RawBoxes[
                    FormBox["x", TraditionalForm]]}, 1, 77, 1, ImageSize -> 
                    Tiny, AnimationRunning -> False, 
                    AppearanceElements -> {
                    "ProgressSlider", "PlayPauseButton", 
                    "FasterSlowerButtons", "DirectionButton"}, 
                    ControlPlacement -> 1}, 
                    Style[
                    Overlay[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "WABitmaps", "PodInfoBackground"]]], 
                    Pane[
                    Column[{
                    Manipulate`Place[1]}], 
                    ImageMargins -> {{20, 30}, {10, 10}}]}, {1, 2}, 2, 
                    Alignment -> {Left, Top}]]}, 
                  "Options" :> {
                   ControlPlacement -> Bottom, 
                    FrameMargins -> {{0, 0}, {0, 10}}, Paneled -> False, 
                    AppearanceElements -> {}, 
                    LabelStyle -> {
                    "DialogStyle", FontColor -> GrayLevel[0.25]}}, 
                  "DefaultOptions" :> {}], SingleEvaluation -> True], 
                Initialization :> ({None, 
                   ReleaseHold[
                    Uncompress[
                    "6:eJztVm1v0zAQbinv7/APkPiMBKuAL0hAB2PSgJKU7/\
XiS2rh2sF2tsGfB5/dJM3aVYrpAE3ph1N9aR7fPffc9R4dyijt93o9fdmaD5LT9BqeHlozkvNcFoK+\
O8kVaM2kSC/hs5vWxGB2gZMfQL3vqjXvpZoT48+\
v8H3Ck4ITA18N48ww0NM9RfIZS3TtGSt2ZH8y5TIhnP2ExzvD4cvhi+\
ceBmMZE2NACb3TFjKfKaIh7SHQFWveciK++\
eOD8vip4DyG7wWIBPQ9650oQi2MFIRjPsG3XmymbmNihghKFD13mpw8R20v0EYxkU1gnuMbZ5P1tC0\
wUZn23NwpudmkIB/+dXwgYxeT97ik3dkRGBbGBaPvtKz+OXcDPL9uC6/\
k8XriML83HHkjhh2BXqXzSes6eUaqrnXRL7g6r/my1SDPnjL1/9IB02Y1jGdtw4D5oa3xeu2twg/\
bwsscu34h7rvWfPaOEnDdcKgE91HSgi+iaKY88BJtn67OrcNj3Kr4jtEZUsEKJ7Jxlv3i+uN+\
BV5vCjHWbroF6Yh6BkSQg3VRx+\
0uy5gZzYgiiQVeXNcvm2wi61AC7mxfeyYoswPME7JpeUKzny7VnZhk9uWPilvJ5VSTIe/\
7wkAGaqPob2B9lCVX0IkMjCTGC5p6DeawSmpMVLDsByVInBPBEJL9sh/\
3zT9crgRStadQXcqzOHClOQlPol8W+ABEZmbNHTtwdAW3LWYTyeNadRFL0+Vpsz2m+\
02mGzc0B3ooCaElCR/o3abQbQp/dVNY2YO7NaFbE7o1oVsTujXh/10TXMT4r/QbLUy4vg=="]]}; 
                 Typeset`initDone$$ = True), DynamicModuleValues :> {}, 
                Deinitialization :> None, 
                UntrackedVariables :> {Typeset`size$$}, 
                SynchronousInitialization -> True, 
                UnsavedVariables :> {Typeset`initDone$$}, 
                UndoTrackedVariables :> {
                 Typeset`show$$, Typeset`bookmarkMode$$}], "Manipulate", 
               Deployed -> True, StripOnInput -> False], TraditionalForm], 
             Manipulate`InterpretManipulate[1]], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {"Graphics", FontFamily -> "Times"}, 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 11, "GraphicsTicks"], 
             DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 11, "GraphicsFrameTicks"], 
             DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"minput"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {
       XMLElement["expressiontype", {"name" -> "Default"}, {}]}]}], 
   Typeset`pod7$$, Typeset`pod8$$, Typeset`pod9$$, Typeset`pod10$$, 
   Typeset`pod11$$, Typeset`pod12$$, Typeset`pod13$$, Typeset`pod14$$, 
   Typeset`pod15$$, Typeset`pod16$$, Typeset`pod17$$, Typeset`pod18$$, 
   Typeset`pod19$$, Typeset`pod20$$, Typeset`pod21$$, Typeset`pod22$$, 
   Typeset`pod23$$, Typeset`pod24$$, Typeset`pod25$$, Typeset`pod26$$, 
   Typeset`pod27$$, Typeset`pod28$$, Typeset`pod29$$, Typeset`pod30$$, 
   Typeset`pod31$$, Typeset`pod32$$, Typeset`pod33$$, Typeset`pod34$$, 
   Typeset`pod35$$, Typeset`pod36$$, Typeset`pod37$$, Typeset`aux1$$ = {
   True, False, {False}, True}, Typeset`aux2$$ = {True, False, {False}, True},
    Typeset`aux3$$ = {True, False, {False, False}, True}, Typeset`aux4$$ = {
   True, False, {False}, True}, Typeset`aux5$$ = {
   True, False, {False, False}, True}, Typeset`aux6$$ = {
   True, False, {False}, True}, Typeset`aux7$$ = {True, False, {False}, True},
    Typeset`aux8$$ = {True, False, {False}, True}, Typeset`aux9$$ = {
   True, False, {False}, True}, Typeset`aux10$$ = {
   True, False, {False}, True}, Typeset`aux11$$ = {
   True, False, {False}, True}, Typeset`aux12$$ = {
   True, False, {False}, True}, Typeset`aux13$$ = {
   True, False, {False}, True}, Typeset`aux14$$ = {
   True, False, {False}, True}, Typeset`aux15$$ = {
   True, False, {False}, True}, Typeset`aux16$$ = {
   True, False, {False}, True}, Typeset`aux17$$ = {
   True, False, {False}, True}, Typeset`aux18$$ = {
   True, False, {False}, True}, Typeset`aux19$$ = {
   True, False, {False}, True}, Typeset`aux20$$ = {
   True, False, {False}, True}, Typeset`aux21$$ = {
   True, False, {False}, True}, Typeset`aux22$$ = {
   True, False, {False}, True}, Typeset`aux23$$ = {
   True, False, {False}, True}, Typeset`aux24$$ = {
   True, False, {False}, True}, Typeset`aux25$$ = {
   True, False, {False}, True}, Typeset`aux26$$ = {
   True, False, {False}, True}, Typeset`aux27$$ = {
   True, False, {False}, True}, Typeset`aux28$$ = {
   True, False, {False}, True}, Typeset`aux29$$ = {
   True, False, {False}, True}, Typeset`aux30$$ = {
   True, False, {False}, True}, Typeset`aux31$$ = {
   True, False, {False}, True}, Typeset`aux32$$ = {
   True, False, {False}, True}, Typeset`aux33$$ = {
   True, False, {False}, True}, Typeset`aux34$$ = {
   True, False, {False}, True}, Typeset`aux35$$ = {
   True, False, {False}, True}, Typeset`aux36$$ = {
   True, False, {False}, True}, Typeset`aux37$$ = {
   True, False, {False}, True}, Typeset`asyncpods$$ = {}, Typeset`nonpods$$ = {
    XMLElement["relatedqueries", {"count" -> "5", "timing" -> "1.22739"}, {
      XMLElement["relatedquery", {}, {"show me some popular curves!"}], 
      XMLElement[
      "relatedquery", {}, {
       "plot (x + i y) (-0.161) - 2.0514 0 + 0.0449 (x + i y) 0"}], 
      XMLElement[
      "relatedquery", {}, {
       "integrate {x (-0.161) - 2.0514 (-1) + 0.0449 x (-1), x (-0.161) - \
2.0514 0 + 0.0449 x 0}"}], 
      XMLElement["relatedquery", {}, {"2.5 g Bazooka Bubble Gum"}], 
      XMLElement[
      "relatedquery", {}, {
       "plot (x + i y) (-0.161) - 2.0514 (-1) + 0.0449 (x + i y) (-1)"}]}], 
    XMLElement[
    "relatedqueries", {"count" -> "5", "timing" -> "1.3124289999999998"}, {
      XMLElement[
      "relatedquery", {}, {
       "differentiate {x (-0.161) - 2.0514 (-1) + 0.0449 x (-1), x (-0.161) - \
2.0514 0 + 0.0449 x 0}"}], 
      XMLElement["relatedquery", {}, {"purpleGeneral Hux-like curve"}], 
      XMLElement[
      "relatedquery", {}, {
       "plot (x + i y) (-0.161) - 2.0514 (-1) + 0.0449 (x + i y) (-1)"}], 
      XMLElement[
      "relatedquery", {}, {
       "plot (x + i y) (-0.161) - 2.0514 0 + 0.0449 (x + i y) 0"}], 
      XMLElement[
      "relatedquery", {}, {
       "integrate {x (-0.161) - 2.0514 (-1) + 0.0449 x (-1), x (-0.161) - \
2.0514 0 + 0.0449 x 0}"}]}]}, Typeset`initdone$$ = 
   FrontEnd`SuppressEvaluationHash[True], 
   Typeset`queryinfo$$ = {{
    "success" -> "true", "error" -> "false", "numpods" -> "7", "datatypes" -> 
     "", "parsetiming" -> "0.582", "parsetimedout" -> "false", "id" -> 
     "HmTRgQBGJ4Y=6:\
eJxTTMoPSmNkYGAoZgESHvk5KWlMMJ5PZnFJGjOMF5BTWgyRYwUSIZm5qcXFII0VRee/\
Bz9eOvvIfohauGzmfyCA6NADEs6JOcmlOYklqQGJRcWpCc75eSWpeSUJcGEEKyg1MaeoTtYi3SWTwQ\
HhnKDSnNRgTiDDrzTXJTM9s6Q4E2QXxBpUq4teeuj9V/y7zB7iQiQlg9onQMxAwCcgJQDCdoHR", 
     "kernelId" -> "232", "processId" -> "2124159", "version" -> "2.6", 
     "inputstring" -> 
     "x*(-.1610)-2.0514*(-1)+0.0449*x*(-1) ; \
x*(-.1610)-2.0514*(0)+0.0449*x*(0)", "sbsallowed" -> "true", "parentId" -> 
     "c7b0a713-2870-4d19-8a4a-ec1e40f3258e", "requestId" -> 
     "c7b0a713-2870-4d19-8a4a-ec1e40f3258e", "timing" -> "1.996", "timedout" -> 
     "", "timedoutpods" -> "", "recalculate" -> 
     "https://gateway.wolframalpha.com/calculate/recalc?id=\
NWM6MjNjZjk0Y2ItOTc3OC00NmExLTk1NTctMGI2NjU1ODE4MjQ1"}, {
    "success" -> "true", "error" -> "false", "numpods" -> "7", "datatypes" -> 
     "", "parsetiming" -> "0.558", "parsetimedout" -> "false", "id" -> 
     "HmTRgQBGJ4Y=6:\
eJxTTMoPSmNkYGAoZgESHvk5KWlMMJ5PZnFJGjOMF5BTWgyRYwUSIZm5qcXFII0VRee/\
Bz9eOvvIfohauGzmfyCA6NADEs6JOcmlOYklqQGJRcWpCc75eSWpeSUJcGEEKyg1MaeoTtYi3SWTwQ\
HhnKDSnNRgTiDDrzTXJTM9s6Q4E2QXxBpUq4teeuj9V/y7zB7iQiQlg9onQMxAwCcgJQDCdoHR", 
     "kernelId" -> "175", "processId" -> "2079579", "version" -> "2.6", 
     "inputstring" -> 
     "x*(-.1610)-2.0514*(-1)+0.0449*x*(-1) ; \
x*(-.1610)-2.0514*(0)+0.0449*x*(0)", "sbsallowed" -> "true", "parentId" -> 
     "1b52604b-7b1c-4846-b9ef-d95d837dacb8", "requestId" -> 
     "1b52604b-7b1c-4846-b9ef-d95d837dacb8", "timing" -> "2.033", "timedout" -> 
     "", "timedoutpods" -> ""}}, Typeset`sessioninfo$$ = {
   "TimeZone" -> 2., 
    "Date" -> {2025, 7, 9, 11, 5, 42.4776214`9.38073506436788}, "Line" -> 7, 
    "SessionID" -> 34441682221341233167}, Typeset`showpods$$ = {1, 2, 3, 4, 5,
    6}, Typeset`failedpods$$ = {7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 
   19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 
   37}, Typeset`chosen$$ = {}, Typeset`open$$ = False, Typeset`newq$$ = 
   "x*(-.1610)-2.0514*(-1)+0.0449*x*(-1) ; \
x*(-.1610)-2.0514*(0)+0.0449*x*(0)"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       2, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
         Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, 
         Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, Typeset`pod16$$, 
         Typeset`pod17$$, Typeset`pod18$$, Typeset`pod19$$, Typeset`pod20$$, 
         Typeset`pod21$$, Typeset`pod22$$, Typeset`pod23$$, Typeset`pod24$$, 
         Typeset`pod25$$, Typeset`pod26$$, Typeset`pod27$$, Typeset`pod28$$, 
         Typeset`pod29$$, Typeset`pod30$$, Typeset`pod31$$, Typeset`pod32$$, 
         Typeset`pod33$$, Typeset`pod34$$, Typeset`pod35$$, Typeset`pod36$$, 
         Typeset`pod37$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
         Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
         Typeset`aux9$$, Typeset`aux10$$, Typeset`aux11$$, Typeset`aux12$$, 
         Typeset`aux13$$, Typeset`aux14$$, Typeset`aux15$$, Typeset`aux16$$, 
         Typeset`aux17$$, Typeset`aux18$$, Typeset`aux19$$, Typeset`aux20$$, 
         Typeset`aux21$$, Typeset`aux22$$, Typeset`aux23$$, Typeset`aux24$$, 
         Typeset`aux25$$, Typeset`aux26$$, Typeset`aux27$$, Typeset`aux28$$, 
         Typeset`aux29$$, Typeset`aux30$$, Typeset`aux31$$, Typeset`aux32$$, 
         Typeset`aux33$$, Typeset`aux34$$, Typeset`aux35$$, Typeset`aux36$$, 
         Typeset`aux37$$}, Typeset`chosen$$, Typeset`open$$, 
        Typeset`elements$$, Typeset`q$$, Typeset`opts$$, Typeset`nonpods$$, 
        Typeset`queryinfo$$, Typeset`sessioninfo$$, Typeset`showpods$$, 
        Typeset`failedpods$$, Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{
     1087.3999999999999`, {660.2194044931366, 665.5104201181366}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     And[
      Not[Typeset`initdone$$ === True], 
      Not[Typeset`initdone$$ === FrontEnd`SuppressEvaluationHash[True]]], 
     Null; AlphaIntegration`DoAsyncInitialization[
       Hold[{
        2, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
          Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
          Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, 
          Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, Typeset`pod16$$, 
          Typeset`pod17$$, Typeset`pod18$$, Typeset`pod19$$, Typeset`pod20$$, 
          Typeset`pod21$$, Typeset`pod22$$, Typeset`pod23$$, Typeset`pod24$$, 
          Typeset`pod25$$, Typeset`pod26$$, Typeset`pod27$$, Typeset`pod28$$, 
          Typeset`pod29$$, Typeset`pod30$$, Typeset`pod31$$, Typeset`pod32$$, 
          Typeset`pod33$$, Typeset`pod34$$, Typeset`pod35$$, Typeset`pod36$$, 
          Typeset`pod37$$}, {
         Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
          Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
          Typeset`aux9$$, Typeset`aux10$$, Typeset`aux11$$, Typeset`aux12$$, 
          Typeset`aux13$$, Typeset`aux14$$, Typeset`aux15$$, Typeset`aux16$$, 
          Typeset`aux17$$, Typeset`aux18$$, Typeset`aux19$$, Typeset`aux20$$, 
          Typeset`aux21$$, Typeset`aux22$$, Typeset`aux23$$, Typeset`aux24$$, 
          Typeset`aux25$$, Typeset`aux26$$, Typeset`aux27$$, Typeset`aux28$$, 
          Typeset`aux29$$, Typeset`aux30$$, Typeset`aux31$$, Typeset`aux32$$, 
          Typeset`aux33$$, Typeset`aux34$$, Typeset`aux35$$, Typeset`aux36$$, 
          Typeset`aux37$$}, Typeset`chosen$$, Typeset`open$$, 
         Typeset`elements$$, Typeset`q$$, Typeset`opts$$, Typeset`nonpods$$, 
         Typeset`queryinfo$$, Typeset`sessioninfo$$, Typeset`showpods$$, 
         Typeset`failedpods$$, Typeset`newq$$, 
         "https://gateway.wolframalpha.com/calculate/recalc?id=\
NWM6MjNjZjk0Y2ItOTc3OC00NmExLTk1NTctMGI2NjU1ODE4MjQ1", Typeset`asyncpods$$}]]; 
     Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True]],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Print", "WolframAlphaFullOutput",
 CellChangeTimes->{
  3.961040742589842*^9},ExpressionUUID->"d6657aa6-79a5-2c45-8ebb-\
9ec76b1c46ab"]
}, Open  ]]
},
WindowSize->{1152, 651.6},
WindowMargins->{{
  Automatic, -5.399999999999864}, {-5.399999999999977, Automatic}},
TaggingRules-><|"TryRealOnly" -> False|>,
FrontEndVersion->"14.2 for Microsoft Windows (64-bit) (March 14, 2025)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"0f179c80-e1ef-4e04-b0e8-350e4b004d1a"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 845, 19, 28, "Input",ExpressionUUID->"e4ffab0d-3633-4d85-be91-aef44cbaa0c8"],
Cell[1428, 43, 319, 7, 32, "Output",ExpressionUUID->"40cda379-8ac9-e94d-9817-d8158ea53b28"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1784, 55, 3637, 58, 47, "Input",ExpressionUUID->"fca6810f-d82e-428c-a14d-68ed3cd356e1"],
Cell[5424, 115, 58778, 1059, 559, "Output",ExpressionUUID->"ac950138-3c65-3049-9a9b-46ff9fbc04ac"]
}, Open  ]],
Cell[CellGroupData[{
Cell[64239, 1179, 143, 2, 28, "Input",ExpressionUUID->"1ae11ea9-65a7-421e-8275-44a91f920198"],
Cell[64385, 1183, 324, 4, 32, "Output",ExpressionUUID->"d58f8e71-906b-034f-b4d3-cda00c861e01"]
}, Open  ]],
Cell[CellGroupData[{
Cell[64746, 1192, 853, 15, 28, "Input",ExpressionUUID->"7b53418f-9f20-4295-b92b-5b2469f74bcd"],
Cell[65602, 1209, 591, 7, 32, "Output",ExpressionUUID->"520ceb02-83f8-0547-91c5-76ca339eb1d5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[66230, 1221, 919, 20, 47, "Input",ExpressionUUID->"6c00bf97-3cb9-4bc5-893f-1ebda90d139a"],
Cell[67152, 1243, 55612, 1092, 376, "Output",ExpressionUUID->"18057cff-89ab-244b-9209-15f5f7aac30b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[122801, 2340, 372, 8, 28, "Input",ExpressionUUID->"1a5ffc38-2728-4300-997f-7ecda4986d9f"],
Cell[123176, 2350, 417, 5, 32, "Output",ExpressionUUID->"7806a8a3-dead-6543-9c94-1ff8c4cc681d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[123630, 2360, 283, 5, 38, "WolframAlphaLong",ExpressionUUID->"4ae2fba7-3cf7-4aa9-9b49-fea9574b44bd"],
Cell[123916, 2367, 127365, 2423, 1333, "Print",ExpressionUUID->"d6657aa6-79a5-2c45-8ebb-9ec76b1c46ab"]
}, Open  ]]
}
]
*)

